
03_Lec_1_Lab_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002898  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  00002898  0000292c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800096  00800096  00002962  2**0
                  ALLOC
  3 .stab         00002370  00000000  00000000  00002964  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000019d4  00000000  00000000  00004cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000066a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000067e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00006958  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000085a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000948c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000a23c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000a39c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000a629  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000adf7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e9       	ldi	r30, 0x98	; 152
      68:	f8 e2       	ldi	r31, 0x28	; 40
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 39       	cpi	r26, 0x96	; 150
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a6 e9       	ldi	r26, 0x96	; 150
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 39       	cpi	r26, 0x99	; 153
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 0a 14 	call	0x2814	; 0x2814 <main>
      8a:	0c 94 4a 14 	jmp	0x2894	; 0x2894 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 13 14 	jmp	0x2826	; 0x2826 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 2f 14 	jmp	0x285e	; 0x285e <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 13 14 	jmp	0x2826	; 0x2826 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 2f 14 	jmp	0x285e	; 0x285e <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 1f 14 	jmp	0x283e	; 0x283e <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 3f 14 	jmp	0x287e	; 0x287e <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <GPIO_initPin>:
static volatile uint8_t *port_registers[] = {&PORTA_REG, &PORTB_REG, &PORTC_REG,
                                             &PORTD_REG};
static volatile uint8_t *pin_registers[] = {&PINA_REG, &PINB_REG, &PINC_REG,
                                            &PIND_REG};

EN_GPIO_systemState_t GPIO_initPin(ST_GPIO_cfg_t const *ST_ptrPinInstance) {
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <GPIO_initPin+0x6>
     b4c:	0f 92       	push	r0
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	9b 83       	std	Y+3, r25	; 0x03
     b54:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t ret = GPIO_NOK;
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrPinInstance) {
     b5a:	8a 81       	ldd	r24, Y+2	; 0x02
     b5c:	9b 81       	ldd	r25, Y+3	; 0x03
     b5e:	00 97       	sbiw	r24, 0x00	; 0
     b60:	b1 f0       	breq	.+44     	; 0xb8e <GPIO_initPin+0x48>
    ret = GPIO_changePinDir(ST_ptrPinInstance, ST_ptrPinInstance->pinDirection);
     b62:	ea 81       	ldd	r30, Y+2	; 0x02
     b64:	fb 81       	ldd	r31, Y+3	; 0x03
     b66:	22 81       	ldd	r18, Z+2	; 0x02
     b68:	8a 81       	ldd	r24, Y+2	; 0x02
     b6a:	9b 81       	ldd	r25, Y+3	; 0x03
     b6c:	62 2f       	mov	r22, r18
     b6e:	0e 94 d0 05 	call	0xba0	; 0xba0 <GPIO_changePinDir>
     b72:	89 83       	std	Y+1, r24	; 0x01
    if (GPIO_OK == ret) {
     b74:	89 81       	ldd	r24, Y+1	; 0x01
     b76:	88 23       	and	r24, r24
     b78:	61 f4       	brne	.+24     	; 0xb92 <GPIO_initPin+0x4c>
      ret =
     b7a:	ea 81       	ldd	r30, Y+2	; 0x02
     b7c:	fb 81       	ldd	r31, Y+3	; 0x03
     b7e:	23 81       	ldd	r18, Z+3	; 0x03
     b80:	8a 81       	ldd	r24, Y+2	; 0x02
     b82:	9b 81       	ldd	r25, Y+3	; 0x03
     b84:	62 2f       	mov	r22, r18
     b86:	0e 94 55 06 	call	0xcaa	; 0xcaa <GPIO_writePinLogic>
     b8a:	89 83       	std	Y+1, r24	; 0x01
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <GPIO_initPin+0x4c>
          GPIO_writePinLogic(ST_ptrPinInstance, ST_ptrPinInstance->logicOnPin);
    } else {
      /*Do Nothin*/
    }
  } else {
    ret = GPIO_NULL_PTR;
     b8e:	82 e0       	ldi	r24, 0x02	; 2
     b90:	89 83       	std	Y+1, r24	; 0x01
  }
  return ret;
     b92:	89 81       	ldd	r24, Y+1	; 0x01
}
     b94:	0f 90       	pop	r0
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	cf 91       	pop	r28
     b9c:	df 91       	pop	r29
     b9e:	08 95       	ret

00000ba0 <GPIO_changePinDir>:

EN_GPIO_systemState_t GPIO_changePinDir(ST_GPIO_cfg_t const *ST_ptrPinInstance,
                                        EN_GPIO_pinDir_t copyNewPinDir) {
     ba0:	df 93       	push	r29
     ba2:	cf 93       	push	r28
     ba4:	00 d0       	rcall	.+0      	; 0xba6 <GPIO_changePinDir+0x6>
     ba6:	00 d0       	rcall	.+0      	; 0xba8 <GPIO_changePinDir+0x8>
     ba8:	00 d0       	rcall	.+0      	; 0xbaa <GPIO_changePinDir+0xa>
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	9b 83       	std	Y+3, r25	; 0x03
     bb0:	8a 83       	std	Y+2, r24	; 0x02
     bb2:	6c 83       	std	Y+4, r22	; 0x04
  EN_GPIO_systemState_t ret = GPIO_NOK;
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrPinInstance) {
     bb8:	8a 81       	ldd	r24, Y+2	; 0x02
     bba:	9b 81       	ldd	r25, Y+3	; 0x03
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <GPIO_changePinDir+0x22>
     bc0:	68 c0       	rjmp	.+208    	; 0xc92 <GPIO_changePinDir+0xf2>
    switch (copyNewPinDir) {
     bc2:	8c 81       	ldd	r24, Y+4	; 0x04
     bc4:	28 2f       	mov	r18, r24
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	3e 83       	std	Y+6, r19	; 0x06
     bca:	2d 83       	std	Y+5, r18	; 0x05
     bcc:	8d 81       	ldd	r24, Y+5	; 0x05
     bce:	9e 81       	ldd	r25, Y+6	; 0x06
     bd0:	00 97       	sbiw	r24, 0x00	; 0
     bd2:	31 f0       	breq	.+12     	; 0xbe0 <GPIO_changePinDir+0x40>
     bd4:	2d 81       	ldd	r18, Y+5	; 0x05
     bd6:	3e 81       	ldd	r19, Y+6	; 0x06
     bd8:	21 30       	cpi	r18, 0x01	; 1
     bda:	31 05       	cpc	r19, r1
     bdc:	71 f1       	breq	.+92     	; 0xc3a <GPIO_changePinDir+0x9a>
     bde:	5b c0       	rjmp	.+182    	; 0xc96 <GPIO_changePinDir+0xf6>
    case GPIO_INPUT: {
      CLR_BIT(*ddr_registers[ST_ptrPinInstance->portName],
     be0:	ea 81       	ldd	r30, Y+2	; 0x02
     be2:	fb 81       	ldd	r31, Y+3	; 0x03
     be4:	80 81       	ld	r24, Z
     be6:	88 2f       	mov	r24, r24
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	88 0f       	add	r24, r24
     bec:	99 1f       	adc	r25, r25
     bee:	fc 01       	movw	r30, r24
     bf0:	e8 59       	subi	r30, 0x98	; 152
     bf2:	ff 4f       	sbci	r31, 0xFF	; 255
     bf4:	a0 81       	ld	r26, Z
     bf6:	b1 81       	ldd	r27, Z+1	; 0x01
     bf8:	ea 81       	ldd	r30, Y+2	; 0x02
     bfa:	fb 81       	ldd	r31, Y+3	; 0x03
     bfc:	80 81       	ld	r24, Z
     bfe:	88 2f       	mov	r24, r24
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	88 0f       	add	r24, r24
     c04:	99 1f       	adc	r25, r25
     c06:	fc 01       	movw	r30, r24
     c08:	e8 59       	subi	r30, 0x98	; 152
     c0a:	ff 4f       	sbci	r31, 0xFF	; 255
     c0c:	01 90       	ld	r0, Z+
     c0e:	f0 81       	ld	r31, Z
     c10:	e0 2d       	mov	r30, r0
     c12:	80 81       	ld	r24, Z
     c14:	48 2f       	mov	r20, r24
     c16:	ea 81       	ldd	r30, Y+2	; 0x02
     c18:	fb 81       	ldd	r31, Y+3	; 0x03
     c1a:	81 81       	ldd	r24, Z+1	; 0x01
     c1c:	28 2f       	mov	r18, r24
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	02 2e       	mov	r0, r18
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <GPIO_changePinDir+0x8c>
     c28:	88 0f       	add	r24, r24
     c2a:	99 1f       	adc	r25, r25
     c2c:	0a 94       	dec	r0
     c2e:	e2 f7       	brpl	.-8      	; 0xc28 <GPIO_changePinDir+0x88>
     c30:	80 95       	com	r24
     c32:	84 23       	and	r24, r20
     c34:	8c 93       	st	X, r24
              ST_ptrPinInstance->pinNumber);
      ret = GPIO_OK;
     c36:	19 82       	std	Y+1, r1	; 0x01
     c38:	2e c0       	rjmp	.+92     	; 0xc96 <GPIO_changePinDir+0xf6>
      break;
    }
    case GPIO_OUTPUT: {
      SET_BIT(*ddr_registers[ST_ptrPinInstance->portName],
     c3a:	ea 81       	ldd	r30, Y+2	; 0x02
     c3c:	fb 81       	ldd	r31, Y+3	; 0x03
     c3e:	80 81       	ld	r24, Z
     c40:	88 2f       	mov	r24, r24
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	88 0f       	add	r24, r24
     c46:	99 1f       	adc	r25, r25
     c48:	fc 01       	movw	r30, r24
     c4a:	e8 59       	subi	r30, 0x98	; 152
     c4c:	ff 4f       	sbci	r31, 0xFF	; 255
     c4e:	a0 81       	ld	r26, Z
     c50:	b1 81       	ldd	r27, Z+1	; 0x01
     c52:	ea 81       	ldd	r30, Y+2	; 0x02
     c54:	fb 81       	ldd	r31, Y+3	; 0x03
     c56:	80 81       	ld	r24, Z
     c58:	88 2f       	mov	r24, r24
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	88 0f       	add	r24, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	fc 01       	movw	r30, r24
     c62:	e8 59       	subi	r30, 0x98	; 152
     c64:	ff 4f       	sbci	r31, 0xFF	; 255
     c66:	01 90       	ld	r0, Z+
     c68:	f0 81       	ld	r31, Z
     c6a:	e0 2d       	mov	r30, r0
     c6c:	80 81       	ld	r24, Z
     c6e:	48 2f       	mov	r20, r24
     c70:	ea 81       	ldd	r30, Y+2	; 0x02
     c72:	fb 81       	ldd	r31, Y+3	; 0x03
     c74:	81 81       	ldd	r24, Z+1	; 0x01
     c76:	28 2f       	mov	r18, r24
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	81 e0       	ldi	r24, 0x01	; 1
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	02 2e       	mov	r0, r18
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <GPIO_changePinDir+0xe6>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	0a 94       	dec	r0
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <GPIO_changePinDir+0xe2>
     c8a:	84 2b       	or	r24, r20
     c8c:	8c 93       	st	X, r24
              ST_ptrPinInstance->pinNumber);
      ret = GPIO_OK;
     c8e:	19 82       	std	Y+1, r1	; 0x01
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <GPIO_changePinDir+0xf6>
      break;
    }
    }
  } else {
    ret = GPIO_NULL_PTR;
     c92:	82 e0       	ldi	r24, 0x02	; 2
     c94:	89 83       	std	Y+1, r24	; 0x01
  }
  return ret;
     c96:	89 81       	ldd	r24, Y+1	; 0x01
}
     c98:	26 96       	adiw	r28, 0x06	; 6
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	de bf       	out	0x3e, r29	; 62
     ca0:	0f be       	out	0x3f, r0	; 63
     ca2:	cd bf       	out	0x3d, r28	; 61
     ca4:	cf 91       	pop	r28
     ca6:	df 91       	pop	r29
     ca8:	08 95       	ret

00000caa <GPIO_writePinLogic>:

EN_GPIO_systemState_t GPIO_writePinLogic(ST_GPIO_cfg_t const *ST_ptrPinInstance,
                                         EN_GPIO_pinLogic_t copyNewPinLogic) {
     caa:	df 93       	push	r29
     cac:	cf 93       	push	r28
     cae:	00 d0       	rcall	.+0      	; 0xcb0 <GPIO_writePinLogic+0x6>
     cb0:	00 d0       	rcall	.+0      	; 0xcb2 <GPIO_writePinLogic+0x8>
     cb2:	00 d0       	rcall	.+0      	; 0xcb4 <GPIO_writePinLogic+0xa>
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	9b 83       	std	Y+3, r25	; 0x03
     cba:	8a 83       	std	Y+2, r24	; 0x02
     cbc:	6c 83       	std	Y+4, r22	; 0x04
  EN_GPIO_systemState_t ret = GPIO_NOK;
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrPinInstance) {
     cc2:	8a 81       	ldd	r24, Y+2	; 0x02
     cc4:	9b 81       	ldd	r25, Y+3	; 0x03
     cc6:	00 97       	sbiw	r24, 0x00	; 0
     cc8:	09 f4       	brne	.+2      	; 0xccc <GPIO_writePinLogic+0x22>
     cca:	68 c0       	rjmp	.+208    	; 0xd9c <GPIO_writePinLogic+0xf2>
    switch (copyNewPinLogic) {
     ccc:	8c 81       	ldd	r24, Y+4	; 0x04
     cce:	28 2f       	mov	r18, r24
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	3e 83       	std	Y+6, r19	; 0x06
     cd4:	2d 83       	std	Y+5, r18	; 0x05
     cd6:	8d 81       	ldd	r24, Y+5	; 0x05
     cd8:	9e 81       	ldd	r25, Y+6	; 0x06
     cda:	00 97       	sbiw	r24, 0x00	; 0
     cdc:	31 f0       	breq	.+12     	; 0xcea <GPIO_writePinLogic+0x40>
     cde:	2d 81       	ldd	r18, Y+5	; 0x05
     ce0:	3e 81       	ldd	r19, Y+6	; 0x06
     ce2:	21 30       	cpi	r18, 0x01	; 1
     ce4:	31 05       	cpc	r19, r1
     ce6:	71 f1       	breq	.+92     	; 0xd44 <GPIO_writePinLogic+0x9a>
     ce8:	5b c0       	rjmp	.+182    	; 0xda0 <GPIO_writePinLogic+0xf6>
    case GPIO_LOW: {
      CLR_BIT(*port_registers[ST_ptrPinInstance->portName],
     cea:	ea 81       	ldd	r30, Y+2	; 0x02
     cec:	fb 81       	ldd	r31, Y+3	; 0x03
     cee:	80 81       	ld	r24, Z
     cf0:	88 2f       	mov	r24, r24
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	88 0f       	add	r24, r24
     cf6:	99 1f       	adc	r25, r25
     cf8:	fc 01       	movw	r30, r24
     cfa:	e0 59       	subi	r30, 0x90	; 144
     cfc:	ff 4f       	sbci	r31, 0xFF	; 255
     cfe:	a0 81       	ld	r26, Z
     d00:	b1 81       	ldd	r27, Z+1	; 0x01
     d02:	ea 81       	ldd	r30, Y+2	; 0x02
     d04:	fb 81       	ldd	r31, Y+3	; 0x03
     d06:	80 81       	ld	r24, Z
     d08:	88 2f       	mov	r24, r24
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	88 0f       	add	r24, r24
     d0e:	99 1f       	adc	r25, r25
     d10:	fc 01       	movw	r30, r24
     d12:	e0 59       	subi	r30, 0x90	; 144
     d14:	ff 4f       	sbci	r31, 0xFF	; 255
     d16:	01 90       	ld	r0, Z+
     d18:	f0 81       	ld	r31, Z
     d1a:	e0 2d       	mov	r30, r0
     d1c:	80 81       	ld	r24, Z
     d1e:	48 2f       	mov	r20, r24
     d20:	ea 81       	ldd	r30, Y+2	; 0x02
     d22:	fb 81       	ldd	r31, Y+3	; 0x03
     d24:	81 81       	ldd	r24, Z+1	; 0x01
     d26:	28 2f       	mov	r18, r24
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	02 2e       	mov	r0, r18
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <GPIO_writePinLogic+0x8c>
     d32:	88 0f       	add	r24, r24
     d34:	99 1f       	adc	r25, r25
     d36:	0a 94       	dec	r0
     d38:	e2 f7       	brpl	.-8      	; 0xd32 <GPIO_writePinLogic+0x88>
     d3a:	80 95       	com	r24
     d3c:	84 23       	and	r24, r20
     d3e:	8c 93       	st	X, r24
              ST_ptrPinInstance->pinNumber);
      ret = GPIO_OK;
     d40:	19 82       	std	Y+1, r1	; 0x01
     d42:	2e c0       	rjmp	.+92     	; 0xda0 <GPIO_writePinLogic+0xf6>
      break;
    }
    case GPIO_HIGH: {
      SET_BIT(*port_registers[ST_ptrPinInstance->portName],
     d44:	ea 81       	ldd	r30, Y+2	; 0x02
     d46:	fb 81       	ldd	r31, Y+3	; 0x03
     d48:	80 81       	ld	r24, Z
     d4a:	88 2f       	mov	r24, r24
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	fc 01       	movw	r30, r24
     d54:	e0 59       	subi	r30, 0x90	; 144
     d56:	ff 4f       	sbci	r31, 0xFF	; 255
     d58:	a0 81       	ld	r26, Z
     d5a:	b1 81       	ldd	r27, Z+1	; 0x01
     d5c:	ea 81       	ldd	r30, Y+2	; 0x02
     d5e:	fb 81       	ldd	r31, Y+3	; 0x03
     d60:	80 81       	ld	r24, Z
     d62:	88 2f       	mov	r24, r24
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	88 0f       	add	r24, r24
     d68:	99 1f       	adc	r25, r25
     d6a:	fc 01       	movw	r30, r24
     d6c:	e0 59       	subi	r30, 0x90	; 144
     d6e:	ff 4f       	sbci	r31, 0xFF	; 255
     d70:	01 90       	ld	r0, Z+
     d72:	f0 81       	ld	r31, Z
     d74:	e0 2d       	mov	r30, r0
     d76:	80 81       	ld	r24, Z
     d78:	48 2f       	mov	r20, r24
     d7a:	ea 81       	ldd	r30, Y+2	; 0x02
     d7c:	fb 81       	ldd	r31, Y+3	; 0x03
     d7e:	81 81       	ldd	r24, Z+1	; 0x01
     d80:	28 2f       	mov	r18, r24
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	81 e0       	ldi	r24, 0x01	; 1
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	02 2e       	mov	r0, r18
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <GPIO_writePinLogic+0xe6>
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	0a 94       	dec	r0
     d92:	e2 f7       	brpl	.-8      	; 0xd8c <GPIO_writePinLogic+0xe2>
     d94:	84 2b       	or	r24, r20
     d96:	8c 93       	st	X, r24
              ST_ptrPinInstance->pinNumber);
      ret = GPIO_OK;
     d98:	19 82       	std	Y+1, r1	; 0x01
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <GPIO_writePinLogic+0xf6>
      break;
    }
    }
  } else {
    ret = GPIO_NULL_PTR;
     d9c:	82 e0       	ldi	r24, 0x02	; 2
     d9e:	89 83       	std	Y+1, r24	; 0x01
  }
  return ret;
     da0:	89 81       	ldd	r24, Y+1	; 0x01
}
     da2:	26 96       	adiw	r28, 0x06	; 6
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	f8 94       	cli
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	cf 91       	pop	r28
     db0:	df 91       	pop	r29
     db2:	08 95       	ret

00000db4 <GPIO_readPinLogic>:

EN_GPIO_systemState_t
GPIO_readPinLogic(ST_GPIO_cfg_t const *ST_ptrPinInstance,
                  EN_GPIO_pinLogic_t *retCurrentPinLogic) {
     db4:	df 93       	push	r29
     db6:	cf 93       	push	r28
     db8:	00 d0       	rcall	.+0      	; 0xdba <GPIO_readPinLogic+0x6>
     dba:	00 d0       	rcall	.+0      	; 0xdbc <GPIO_readPinLogic+0x8>
     dbc:	0f 92       	push	r0
     dbe:	cd b7       	in	r28, 0x3d	; 61
     dc0:	de b7       	in	r29, 0x3e	; 62
     dc2:	9b 83       	std	Y+3, r25	; 0x03
     dc4:	8a 83       	std	Y+2, r24	; 0x02
     dc6:	7d 83       	std	Y+5, r23	; 0x05
     dc8:	6c 83       	std	Y+4, r22	; 0x04
  EN_GPIO_systemState_t ret = GPIO_NOK;
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrPinInstance) {
     dce:	8a 81       	ldd	r24, Y+2	; 0x02
     dd0:	9b 81       	ldd	r25, Y+3	; 0x03
     dd2:	00 97       	sbiw	r24, 0x00	; 0
     dd4:	11 f1       	breq	.+68     	; 0xe1a <GPIO_readPinLogic+0x66>
    *retCurrentPinLogic = GET_BIT(*pin_registers[ST_ptrPinInstance->portName],
     dd6:	ea 81       	ldd	r30, Y+2	; 0x02
     dd8:	fb 81       	ldd	r31, Y+3	; 0x03
     dda:	80 81       	ld	r24, Z
     ddc:	88 2f       	mov	r24, r24
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	fc 01       	movw	r30, r24
     de6:	e8 58       	subi	r30, 0x88	; 136
     de8:	ff 4f       	sbci	r31, 0xFF	; 255
     dea:	01 90       	ld	r0, Z+
     dec:	f0 81       	ld	r31, Z
     dee:	e0 2d       	mov	r30, r0
     df0:	80 81       	ld	r24, Z
     df2:	28 2f       	mov	r18, r24
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	ea 81       	ldd	r30, Y+2	; 0x02
     df8:	fb 81       	ldd	r31, Y+3	; 0x03
     dfa:	81 81       	ldd	r24, Z+1	; 0x01
     dfc:	88 2f       	mov	r24, r24
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	a9 01       	movw	r20, r18
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <GPIO_readPinLogic+0x54>
     e04:	55 95       	asr	r21
     e06:	47 95       	ror	r20
     e08:	8a 95       	dec	r24
     e0a:	e2 f7       	brpl	.-8      	; 0xe04 <GPIO_readPinLogic+0x50>
     e0c:	ca 01       	movw	r24, r20
     e0e:	81 70       	andi	r24, 0x01	; 1
     e10:	ec 81       	ldd	r30, Y+4	; 0x04
     e12:	fd 81       	ldd	r31, Y+5	; 0x05
     e14:	80 83       	st	Z, r24
                                  ST_ptrPinInstance->pinNumber);
    ret = GPIO_OK;
     e16:	19 82       	std	Y+1, r1	; 0x01
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <GPIO_readPinLogic+0x6a>
  } else {
    ret = GPIO_NULL_PTR;
     e1a:	82 e0       	ldi	r24, 0x02	; 2
     e1c:	89 83       	std	Y+1, r24	; 0x01
  }
  return ret;
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
}
     e20:	0f 90       	pop	r0
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	cf 91       	pop	r28
     e2c:	df 91       	pop	r29
     e2e:	08 95       	ret

00000e30 <GPIO_togglePinLogic>:

EN_GPIO_systemState_t
GPIO_togglePinLogic(ST_GPIO_cfg_t const *ST_ptrPinInstance) {
     e30:	df 93       	push	r29
     e32:	cf 93       	push	r28
     e34:	00 d0       	rcall	.+0      	; 0xe36 <GPIO_togglePinLogic+0x6>
     e36:	0f 92       	push	r0
     e38:	cd b7       	in	r28, 0x3d	; 61
     e3a:	de b7       	in	r29, 0x3e	; 62
     e3c:	9b 83       	std	Y+3, r25	; 0x03
     e3e:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t ret = GPIO_NOK;
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrPinInstance) {
     e44:	8a 81       	ldd	r24, Y+2	; 0x02
     e46:	9b 81       	ldd	r25, Y+3	; 0x03
     e48:	00 97       	sbiw	r24, 0x00	; 0
     e4a:	61 f1       	breq	.+88     	; 0xea4 <GPIO_togglePinLogic+0x74>
    TOG_BIT(*port_registers[ST_ptrPinInstance->portName],
     e4c:	ea 81       	ldd	r30, Y+2	; 0x02
     e4e:	fb 81       	ldd	r31, Y+3	; 0x03
     e50:	80 81       	ld	r24, Z
     e52:	88 2f       	mov	r24, r24
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	88 0f       	add	r24, r24
     e58:	99 1f       	adc	r25, r25
     e5a:	fc 01       	movw	r30, r24
     e5c:	e0 59       	subi	r30, 0x90	; 144
     e5e:	ff 4f       	sbci	r31, 0xFF	; 255
     e60:	a0 81       	ld	r26, Z
     e62:	b1 81       	ldd	r27, Z+1	; 0x01
     e64:	ea 81       	ldd	r30, Y+2	; 0x02
     e66:	fb 81       	ldd	r31, Y+3	; 0x03
     e68:	80 81       	ld	r24, Z
     e6a:	88 2f       	mov	r24, r24
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	88 0f       	add	r24, r24
     e70:	99 1f       	adc	r25, r25
     e72:	fc 01       	movw	r30, r24
     e74:	e0 59       	subi	r30, 0x90	; 144
     e76:	ff 4f       	sbci	r31, 0xFF	; 255
     e78:	01 90       	ld	r0, Z+
     e7a:	f0 81       	ld	r31, Z
     e7c:	e0 2d       	mov	r30, r0
     e7e:	80 81       	ld	r24, Z
     e80:	48 2f       	mov	r20, r24
     e82:	ea 81       	ldd	r30, Y+2	; 0x02
     e84:	fb 81       	ldd	r31, Y+3	; 0x03
     e86:	81 81       	ldd	r24, Z+1	; 0x01
     e88:	28 2f       	mov	r18, r24
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	02 2e       	mov	r0, r18
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <GPIO_togglePinLogic+0x68>
     e94:	88 0f       	add	r24, r24
     e96:	99 1f       	adc	r25, r25
     e98:	0a 94       	dec	r0
     e9a:	e2 f7       	brpl	.-8      	; 0xe94 <GPIO_togglePinLogic+0x64>
     e9c:	84 27       	eor	r24, r20
     e9e:	8c 93       	st	X, r24
            ST_ptrPinInstance->pinNumber);
    ret = GPIO_OK;
     ea0:	19 82       	std	Y+1, r1	; 0x01
     ea2:	02 c0       	rjmp	.+4      	; 0xea8 <GPIO_togglePinLogic+0x78>
  } else {
    ret = GPIO_NULL_PTR;
     ea4:	82 e0       	ldi	r24, 0x02	; 2
     ea6:	89 83       	std	Y+1, r24	; 0x01
  }

  return ret;
     ea8:	89 81       	ldd	r24, Y+1	; 0x01
}
     eaa:	0f 90       	pop	r0
     eac:	0f 90       	pop	r0
     eae:	0f 90       	pop	r0
     eb0:	cf 91       	pop	r28
     eb2:	df 91       	pop	r29
     eb4:	08 95       	ret

00000eb6 <GPIO_initPort>:

EN_GPIO_systemState_t GPIO_initPort(EN_GPIO_mcuPorts_t copyPortName,
                                    EN_GPIO_pinDir_t copyPortDir,
                                    EN_GPIO_pinLogic_t copyPortLogic) {
     eb6:	df 93       	push	r29
     eb8:	cf 93       	push	r28
     eba:	cd b7       	in	r28, 0x3d	; 61
     ebc:	de b7       	in	r29, 0x3e	; 62
     ebe:	28 97       	sbiw	r28, 0x08	; 8
     ec0:	0f b6       	in	r0, 0x3f	; 63
     ec2:	f8 94       	cli
     ec4:	de bf       	out	0x3e, r29	; 62
     ec6:	0f be       	out	0x3f, r0	; 63
     ec8:	cd bf       	out	0x3d, r28	; 61
     eca:	8a 83       	std	Y+2, r24	; 0x02
     ecc:	6b 83       	std	Y+3, r22	; 0x03
     ece:	4c 83       	std	Y+4, r20	; 0x04
  EN_GPIO_systemState_t ret = GPIO_NOK;
     ed0:	81 e0       	ldi	r24, 0x01	; 1
     ed2:	89 83       	std	Y+1, r24	; 0x01

  switch (copyPortDir) {
     ed4:	8b 81       	ldd	r24, Y+3	; 0x03
     ed6:	28 2f       	mov	r18, r24
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	38 87       	std	Y+8, r19	; 0x08
     edc:	2f 83       	std	Y+7, r18	; 0x07
     ede:	8f 81       	ldd	r24, Y+7	; 0x07
     ee0:	98 85       	ldd	r25, Y+8	; 0x08
     ee2:	00 97       	sbiw	r24, 0x00	; 0
     ee4:	31 f0       	breq	.+12     	; 0xef2 <GPIO_initPort+0x3c>
     ee6:	2f 81       	ldd	r18, Y+7	; 0x07
     ee8:	38 85       	ldd	r19, Y+8	; 0x08
     eea:	21 30       	cpi	r18, 0x01	; 1
     eec:	31 05       	cpc	r19, r1
     eee:	79 f0       	breq	.+30     	; 0xf0e <GPIO_initPort+0x58>
     ef0:	1c c0       	rjmp	.+56     	; 0xf2a <GPIO_initPort+0x74>
  case GPIO_INPUT: {
    *ddr_registers[copyPortName] = 0x00;
     ef2:	8a 81       	ldd	r24, Y+2	; 0x02
     ef4:	88 2f       	mov	r24, r24
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	88 0f       	add	r24, r24
     efa:	99 1f       	adc	r25, r25
     efc:	fc 01       	movw	r30, r24
     efe:	e8 59       	subi	r30, 0x98	; 152
     f00:	ff 4f       	sbci	r31, 0xFF	; 255
     f02:	01 90       	ld	r0, Z+
     f04:	f0 81       	ld	r31, Z
     f06:	e0 2d       	mov	r30, r0
     f08:	10 82       	st	Z, r1
    ret = GPIO_OK;
     f0a:	19 82       	std	Y+1, r1	; 0x01
     f0c:	0e c0       	rjmp	.+28     	; 0xf2a <GPIO_initPort+0x74>
    break;
  }
  case GPIO_OUTPUT: {
    *ddr_registers[copyPortName] = 0xFF;
     f0e:	8a 81       	ldd	r24, Y+2	; 0x02
     f10:	88 2f       	mov	r24, r24
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	88 0f       	add	r24, r24
     f16:	99 1f       	adc	r25, r25
     f18:	fc 01       	movw	r30, r24
     f1a:	e8 59       	subi	r30, 0x98	; 152
     f1c:	ff 4f       	sbci	r31, 0xFF	; 255
     f1e:	01 90       	ld	r0, Z+
     f20:	f0 81       	ld	r31, Z
     f22:	e0 2d       	mov	r30, r0
     f24:	8f ef       	ldi	r24, 0xFF	; 255
     f26:	80 83       	st	Z, r24
    ret = GPIO_OK;
     f28:	19 82       	std	Y+1, r1	; 0x01
    break;
  }
  }
  switch (copyPortLogic) {
     f2a:	8c 81       	ldd	r24, Y+4	; 0x04
     f2c:	28 2f       	mov	r18, r24
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	3e 83       	std	Y+6, r19	; 0x06
     f32:	2d 83       	std	Y+5, r18	; 0x05
     f34:	8d 81       	ldd	r24, Y+5	; 0x05
     f36:	9e 81       	ldd	r25, Y+6	; 0x06
     f38:	00 97       	sbiw	r24, 0x00	; 0
     f3a:	31 f0       	breq	.+12     	; 0xf48 <GPIO_initPort+0x92>
     f3c:	2d 81       	ldd	r18, Y+5	; 0x05
     f3e:	3e 81       	ldd	r19, Y+6	; 0x06
     f40:	21 30       	cpi	r18, 0x01	; 1
     f42:	31 05       	cpc	r19, r1
     f44:	79 f0       	breq	.+30     	; 0xf64 <GPIO_initPort+0xae>
     f46:	1c c0       	rjmp	.+56     	; 0xf80 <GPIO_initPort+0xca>
  case GPIO_LOW: {
    *port_registers[copyPortName] = 0x00;
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	88 2f       	mov	r24, r24
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	fc 01       	movw	r30, r24
     f54:	e0 59       	subi	r30, 0x90	; 144
     f56:	ff 4f       	sbci	r31, 0xFF	; 255
     f58:	01 90       	ld	r0, Z+
     f5a:	f0 81       	ld	r31, Z
     f5c:	e0 2d       	mov	r30, r0
     f5e:	10 82       	st	Z, r1
    ret = GPIO_OK;
     f60:	19 82       	std	Y+1, r1	; 0x01
     f62:	0e c0       	rjmp	.+28     	; 0xf80 <GPIO_initPort+0xca>
    break;
  }
  case GPIO_HIGH: {
    *port_registers[copyPortName] = 0xFF;
     f64:	8a 81       	ldd	r24, Y+2	; 0x02
     f66:	88 2f       	mov	r24, r24
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	fc 01       	movw	r30, r24
     f70:	e0 59       	subi	r30, 0x90	; 144
     f72:	ff 4f       	sbci	r31, 0xFF	; 255
     f74:	01 90       	ld	r0, Z+
     f76:	f0 81       	ld	r31, Z
     f78:	e0 2d       	mov	r30, r0
     f7a:	8f ef       	ldi	r24, 0xFF	; 255
     f7c:	80 83       	st	Z, r24
    ret = GPIO_OK;
     f7e:	19 82       	std	Y+1, r1	; 0x01
    break;
  }
  }
  return ret;
     f80:	89 81       	ldd	r24, Y+1	; 0x01
}
     f82:	28 96       	adiw	r28, 0x08	; 8
     f84:	0f b6       	in	r0, 0x3f	; 63
     f86:	f8 94       	cli
     f88:	de bf       	out	0x3e, r29	; 62
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	cd bf       	out	0x3d, r28	; 61
     f8e:	cf 91       	pop	r28
     f90:	df 91       	pop	r29
     f92:	08 95       	ret

00000f94 <GPIO_changePortDir>:

EN_GPIO_systemState_t GPIO_changePortDir(EN_GPIO_mcuPorts_t copyPortName,
                                         EN_GPIO_pinDir_t copyNewPortDir) {
     f94:	df 93       	push	r29
     f96:	cf 93       	push	r28
     f98:	00 d0       	rcall	.+0      	; 0xf9a <GPIO_changePortDir+0x6>
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <GPIO_changePortDir+0x8>
     f9c:	0f 92       	push	r0
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	8a 83       	std	Y+2, r24	; 0x02
     fa4:	6b 83       	std	Y+3, r22	; 0x03
  EN_GPIO_systemState_t ret = GPIO_NOK;
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01

  switch (copyNewPortDir) {
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	3d 83       	std	Y+5, r19	; 0x05
     fb2:	2c 83       	std	Y+4, r18	; 0x04
     fb4:	8c 81       	ldd	r24, Y+4	; 0x04
     fb6:	9d 81       	ldd	r25, Y+5	; 0x05
     fb8:	00 97       	sbiw	r24, 0x00	; 0
     fba:	31 f0       	breq	.+12     	; 0xfc8 <GPIO_changePortDir+0x34>
     fbc:	2c 81       	ldd	r18, Y+4	; 0x04
     fbe:	3d 81       	ldd	r19, Y+5	; 0x05
     fc0:	21 30       	cpi	r18, 0x01	; 1
     fc2:	31 05       	cpc	r19, r1
     fc4:	79 f0       	breq	.+30     	; 0xfe4 <GPIO_changePortDir+0x50>
     fc6:	1c c0       	rjmp	.+56     	; 0x1000 <GPIO_changePortDir+0x6c>
  case GPIO_INPUT: {
    *ddr_registers[copyPortName] = 0x00;
     fc8:	8a 81       	ldd	r24, Y+2	; 0x02
     fca:	88 2f       	mov	r24, r24
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	88 0f       	add	r24, r24
     fd0:	99 1f       	adc	r25, r25
     fd2:	fc 01       	movw	r30, r24
     fd4:	e8 59       	subi	r30, 0x98	; 152
     fd6:	ff 4f       	sbci	r31, 0xFF	; 255
     fd8:	01 90       	ld	r0, Z+
     fda:	f0 81       	ld	r31, Z
     fdc:	e0 2d       	mov	r30, r0
     fde:	10 82       	st	Z, r1
    ret = GPIO_OK;
     fe0:	19 82       	std	Y+1, r1	; 0x01
     fe2:	0e c0       	rjmp	.+28     	; 0x1000 <GPIO_changePortDir+0x6c>
    break;
  }
  case GPIO_OUTPUT: {
    *ddr_registers[copyPortName] = 0xFF;
     fe4:	8a 81       	ldd	r24, Y+2	; 0x02
     fe6:	88 2f       	mov	r24, r24
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	88 0f       	add	r24, r24
     fec:	99 1f       	adc	r25, r25
     fee:	fc 01       	movw	r30, r24
     ff0:	e8 59       	subi	r30, 0x98	; 152
     ff2:	ff 4f       	sbci	r31, 0xFF	; 255
     ff4:	01 90       	ld	r0, Z+
     ff6:	f0 81       	ld	r31, Z
     ff8:	e0 2d       	mov	r30, r0
     ffa:	8f ef       	ldi	r24, 0xFF	; 255
     ffc:	80 83       	st	Z, r24
    ret = GPIO_OK;
     ffe:	19 82       	std	Y+1, r1	; 0x01
    break;
  }
  }
  return ret;
    1000:	89 81       	ldd	r24, Y+1	; 0x01
}
    1002:	0f 90       	pop	r0
    1004:	0f 90       	pop	r0
    1006:	0f 90       	pop	r0
    1008:	0f 90       	pop	r0
    100a:	0f 90       	pop	r0
    100c:	cf 91       	pop	r28
    100e:	df 91       	pop	r29
    1010:	08 95       	ret

00001012 <GPIO_writePortLogic>:

EN_GPIO_systemState_t GPIO_writePortLogic(EN_GPIO_mcuPorts_t copyPortName,
                                          EN_GPIO_pinLogic_t copyNewPortLogic) {
    1012:	df 93       	push	r29
    1014:	cf 93       	push	r28
    1016:	00 d0       	rcall	.+0      	; 0x1018 <GPIO_writePortLogic+0x6>
    1018:	00 d0       	rcall	.+0      	; 0x101a <GPIO_writePortLogic+0x8>
    101a:	0f 92       	push	r0
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
    1020:	8a 83       	std	Y+2, r24	; 0x02
    1022:	6b 83       	std	Y+3, r22	; 0x03
  EN_GPIO_systemState_t ret = GPIO_NOK;
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	89 83       	std	Y+1, r24	; 0x01
  switch (copyNewPortLogic) {
    1028:	8b 81       	ldd	r24, Y+3	; 0x03
    102a:	28 2f       	mov	r18, r24
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	3d 83       	std	Y+5, r19	; 0x05
    1030:	2c 83       	std	Y+4, r18	; 0x04
    1032:	8c 81       	ldd	r24, Y+4	; 0x04
    1034:	9d 81       	ldd	r25, Y+5	; 0x05
    1036:	00 97       	sbiw	r24, 0x00	; 0
    1038:	31 f0       	breq	.+12     	; 0x1046 <GPIO_writePortLogic+0x34>
    103a:	2c 81       	ldd	r18, Y+4	; 0x04
    103c:	3d 81       	ldd	r19, Y+5	; 0x05
    103e:	21 30       	cpi	r18, 0x01	; 1
    1040:	31 05       	cpc	r19, r1
    1042:	79 f0       	breq	.+30     	; 0x1062 <GPIO_writePortLogic+0x50>
    1044:	1c c0       	rjmp	.+56     	; 0x107e <GPIO_writePortLogic+0x6c>
  case GPIO_LOW: {
    *port_registers[copyPortName] = 0x00;
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	88 2f       	mov	r24, r24
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	88 0f       	add	r24, r24
    104e:	99 1f       	adc	r25, r25
    1050:	fc 01       	movw	r30, r24
    1052:	e0 59       	subi	r30, 0x90	; 144
    1054:	ff 4f       	sbci	r31, 0xFF	; 255
    1056:	01 90       	ld	r0, Z+
    1058:	f0 81       	ld	r31, Z
    105a:	e0 2d       	mov	r30, r0
    105c:	10 82       	st	Z, r1
    ret = GPIO_OK;
    105e:	19 82       	std	Y+1, r1	; 0x01
    1060:	0e c0       	rjmp	.+28     	; 0x107e <GPIO_writePortLogic+0x6c>
    break;
  }
  case GPIO_HIGH: {
    *port_registers[copyPortName] = 0xFF;
    1062:	8a 81       	ldd	r24, Y+2	; 0x02
    1064:	88 2f       	mov	r24, r24
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	fc 01       	movw	r30, r24
    106e:	e0 59       	subi	r30, 0x90	; 144
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	01 90       	ld	r0, Z+
    1074:	f0 81       	ld	r31, Z
    1076:	e0 2d       	mov	r30, r0
    1078:	8f ef       	ldi	r24, 0xFF	; 255
    107a:	80 83       	st	Z, r24
    ret = GPIO_OK;
    107c:	19 82       	std	Y+1, r1	; 0x01
    break;
  }
  }
  return ret;
    107e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1080:	0f 90       	pop	r0
    1082:	0f 90       	pop	r0
    1084:	0f 90       	pop	r0
    1086:	0f 90       	pop	r0
    1088:	0f 90       	pop	r0
    108a:	cf 91       	pop	r28
    108c:	df 91       	pop	r29
    108e:	08 95       	ret

00001090 <GPIO_readPortLogic>:

EN_GPIO_systemState_t
GPIO_readPortLogic(EN_GPIO_mcuPorts_t copyPortName,
                   EN_GPIO_pinLogic_t *retCurrentPortLogic) {
    1090:	df 93       	push	r29
    1092:	cf 93       	push	r28
    1094:	00 d0       	rcall	.+0      	; 0x1096 <GPIO_readPortLogic+0x6>
    1096:	00 d0       	rcall	.+0      	; 0x1098 <GPIO_readPortLogic+0x8>
    1098:	cd b7       	in	r28, 0x3d	; 61
    109a:	de b7       	in	r29, 0x3e	; 62
    109c:	8a 83       	std	Y+2, r24	; 0x02
    109e:	7c 83       	std	Y+4, r23	; 0x04
    10a0:	6b 83       	std	Y+3, r22	; 0x03
  EN_GPIO_systemState_t ret = GPIO_NOK;
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	89 83       	std	Y+1, r24	; 0x01

  *retCurrentPortLogic = *pin_registers[copyPortName];
    10a6:	8a 81       	ldd	r24, Y+2	; 0x02
    10a8:	88 2f       	mov	r24, r24
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	88 0f       	add	r24, r24
    10ae:	99 1f       	adc	r25, r25
    10b0:	fc 01       	movw	r30, r24
    10b2:	e8 58       	subi	r30, 0x88	; 136
    10b4:	ff 4f       	sbci	r31, 0xFF	; 255
    10b6:	01 90       	ld	r0, Z+
    10b8:	f0 81       	ld	r31, Z
    10ba:	e0 2d       	mov	r30, r0
    10bc:	80 81       	ld	r24, Z
    10be:	eb 81       	ldd	r30, Y+3	; 0x03
    10c0:	fc 81       	ldd	r31, Y+4	; 0x04
    10c2:	80 83       	st	Z, r24
  ret = GPIO_OK;
    10c4:	19 82       	std	Y+1, r1	; 0x01
  return ret;
    10c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    10c8:	0f 90       	pop	r0
    10ca:	0f 90       	pop	r0
    10cc:	0f 90       	pop	r0
    10ce:	0f 90       	pop	r0
    10d0:	cf 91       	pop	r28
    10d2:	df 91       	pop	r29
    10d4:	08 95       	ret

000010d6 <GPIO_togglePortLogic>:

EN_GPIO_systemState_t GPIO_togglePortLogic(EN_GPIO_mcuPorts_t copyPortName) {
    10d6:	df 93       	push	r29
    10d8:	cf 93       	push	r28
    10da:	00 d0       	rcall	.+0      	; 0x10dc <GPIO_togglePortLogic+0x6>
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t ret = GPIO_NOK;
    10e2:	81 e0       	ldi	r24, 0x01	; 1
    10e4:	89 83       	std	Y+1, r24	; 0x01
  *ddr_registers[copyPortName] ^= *ddr_registers[copyPortName];
    10e6:	8a 81       	ldd	r24, Y+2	; 0x02
    10e8:	88 2f       	mov	r24, r24
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	fc 01       	movw	r30, r24
    10f2:	e8 59       	subi	r30, 0x98	; 152
    10f4:	ff 4f       	sbci	r31, 0xFF	; 255
    10f6:	a0 81       	ld	r26, Z
    10f8:	b1 81       	ldd	r27, Z+1	; 0x01
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	88 2f       	mov	r24, r24
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	88 0f       	add	r24, r24
    1102:	99 1f       	adc	r25, r25
    1104:	fc 01       	movw	r30, r24
    1106:	e8 59       	subi	r30, 0x98	; 152
    1108:	ff 4f       	sbci	r31, 0xFF	; 255
    110a:	01 90       	ld	r0, Z+
    110c:	f0 81       	ld	r31, Z
    110e:	e0 2d       	mov	r30, r0
    1110:	20 81       	ld	r18, Z
    1112:	8a 81       	ldd	r24, Y+2	; 0x02
    1114:	88 2f       	mov	r24, r24
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	88 0f       	add	r24, r24
    111a:	99 1f       	adc	r25, r25
    111c:	fc 01       	movw	r30, r24
    111e:	e8 59       	subi	r30, 0x98	; 152
    1120:	ff 4f       	sbci	r31, 0xFF	; 255
    1122:	01 90       	ld	r0, Z+
    1124:	f0 81       	ld	r31, Z
    1126:	e0 2d       	mov	r30, r0
    1128:	80 81       	ld	r24, Z
    112a:	82 27       	eor	r24, r18
    112c:	8c 93       	st	X, r24
  ret = GPIO_OK;
    112e:	19 82       	std	Y+1, r1	; 0x01
  return ret;
    1130:	89 81       	ldd	r24, Y+1	; 0x01
}
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	cf 91       	pop	r28
    1138:	df 91       	pop	r29
    113a:	08 95       	ret

0000113c <LED_init>:
// Date          : 1 Aug 2023 */ GitHub        : https://github.com/sherifkhadr
/*************************************************************************/

#include "led_interface.h"

EN_LED_systemStates_t LED_init(ST_LED_cfg_t const *ST_ptrLedInstance) {
    113c:	df 93       	push	r29
    113e:	cf 93       	push	r28
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	28 97       	sbiw	r28, 0x08	; 8
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61
    1150:	98 87       	std	Y+8, r25	; 0x08
    1152:	8f 83       	std	Y+7, r24	; 0x07
  EN_LED_systemStates_t ledRet = LED_NOK;
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t gpioRet = GPIO_NOK;
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrLedInstance) {
    115c:	8f 81       	ldd	r24, Y+7	; 0x07
    115e:	98 85       	ldd	r25, Y+8	; 0x08
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	d9 f0       	breq	.+54     	; 0x119a <LED_init+0x5e>

    ST_GPIO_cfg_t copyOfLedInstance = {
        .logicOnPin = (EN_GPIO_pinLogic_t)ST_ptrLedInstance->ledDefaultState,
        .pinDirection = GPIO_OUTPUT,
        .pinNumber = ST_ptrLedInstance->ledPinNumber,
        .portName = ST_ptrLedInstance->ledPortName};
    1164:	ef 81       	ldd	r30, Y+7	; 0x07
    1166:	f8 85       	ldd	r31, Y+8	; 0x08
    1168:	81 81       	ldd	r24, Z+1	; 0x01
    116a:	ef 81       	ldd	r30, Y+7	; 0x07
    116c:	f8 85       	ldd	r31, Y+8	; 0x08
    116e:	92 81       	ldd	r25, Z+2	; 0x02
    1170:	ef 81       	ldd	r30, Y+7	; 0x07
    1172:	f8 85       	ldd	r31, Y+8	; 0x08
    1174:	20 81       	ld	r18, Z
    1176:	8b 83       	std	Y+3, r24	; 0x03
    1178:	9c 83       	std	Y+4, r25	; 0x04
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	8d 83       	std	Y+5, r24	; 0x05
    117e:	2e 83       	std	Y+6, r18	; 0x06
    gpioRet = GPIO_initPin(&copyOfLedInstance);
    1180:	ce 01       	movw	r24, r28
    1182:	03 96       	adiw	r24, 0x03	; 3
    1184:	0e 94 a3 05 	call	0xb46	; 0xb46 <GPIO_initPin>
    1188:	89 83       	std	Y+1, r24	; 0x01
    if (GPIO_OK == gpioRet) {
    118a:	89 81       	ldd	r24, Y+1	; 0x01
    118c:	88 23       	and	r24, r24
    118e:	11 f4       	brne	.+4      	; 0x1194 <LED_init+0x58>
      ledRet = LED_OK;
    1190:	1a 82       	std	Y+2, r1	; 0x02
    1192:	05 c0       	rjmp	.+10     	; 0x119e <LED_init+0x62>
    } else {
      ledRet = LED_NOK;
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	8a 83       	std	Y+2, r24	; 0x02
    1198:	02 c0       	rjmp	.+4      	; 0x119e <LED_init+0x62>
    }
  } else {
    ledRet = LED_PTR_NULL;
    119a:	82 e0       	ldi	r24, 0x02	; 2
    119c:	8a 83       	std	Y+2, r24	; 0x02
  }
  return ledRet;
    119e:	8a 81       	ldd	r24, Y+2	; 0x02
}
    11a0:	28 96       	adiw	r28, 0x08	; 8
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	f8 94       	cli
    11a6:	de bf       	out	0x3e, r29	; 62
    11a8:	0f be       	out	0x3f, r0	; 63
    11aa:	cd bf       	out	0x3d, r28	; 61
    11ac:	cf 91       	pop	r28
    11ae:	df 91       	pop	r29
    11b0:	08 95       	ret

000011b2 <LED_turnOn>:
EN_LED_systemStates_t LED_turnOn(ST_LED_cfg_t const *ST_ptrLedInstance) {
    11b2:	df 93       	push	r29
    11b4:	cf 93       	push	r28
    11b6:	cd b7       	in	r28, 0x3d	; 61
    11b8:	de b7       	in	r29, 0x3e	; 62
    11ba:	28 97       	sbiw	r28, 0x08	; 8
    11bc:	0f b6       	in	r0, 0x3f	; 63
    11be:	f8 94       	cli
    11c0:	de bf       	out	0x3e, r29	; 62
    11c2:	0f be       	out	0x3f, r0	; 63
    11c4:	cd bf       	out	0x3d, r28	; 61
    11c6:	98 87       	std	Y+8, r25	; 0x08
    11c8:	8f 83       	std	Y+7, r24	; 0x07
  EN_LED_systemStates_t ledRet = LED_NOK;
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t gpioRet = GPIO_NOK;
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrLedInstance) {
    11d2:	8f 81       	ldd	r24, Y+7	; 0x07
    11d4:	98 85       	ldd	r25, Y+8	; 0x08
    11d6:	00 97       	sbiw	r24, 0x00	; 0
    11d8:	e1 f0       	breq	.+56     	; 0x1212 <LED_turnOn+0x60>

    ST_GPIO_cfg_t copyOfLedInstance = {
        .logicOnPin = (EN_GPIO_pinLogic_t)ST_ptrLedInstance->ledDefaultState,
        .pinDirection = GPIO_OUTPUT,
        .pinNumber = ST_ptrLedInstance->ledPinNumber,
        .portName = ST_ptrLedInstance->ledPortName};
    11da:	ef 81       	ldd	r30, Y+7	; 0x07
    11dc:	f8 85       	ldd	r31, Y+8	; 0x08
    11de:	81 81       	ldd	r24, Z+1	; 0x01
    11e0:	ef 81       	ldd	r30, Y+7	; 0x07
    11e2:	f8 85       	ldd	r31, Y+8	; 0x08
    11e4:	92 81       	ldd	r25, Z+2	; 0x02
    11e6:	ef 81       	ldd	r30, Y+7	; 0x07
    11e8:	f8 85       	ldd	r31, Y+8	; 0x08
    11ea:	20 81       	ld	r18, Z
    11ec:	8b 83       	std	Y+3, r24	; 0x03
    11ee:	9c 83       	std	Y+4, r25	; 0x04
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	8d 83       	std	Y+5, r24	; 0x05
    11f4:	2e 83       	std	Y+6, r18	; 0x06
    gpioRet = GPIO_writePinLogic(&copyOfLedInstance, GPIO_HIGH);
    11f6:	ce 01       	movw	r24, r28
    11f8:	03 96       	adiw	r24, 0x03	; 3
    11fa:	61 e0       	ldi	r22, 0x01	; 1
    11fc:	0e 94 55 06 	call	0xcaa	; 0xcaa <GPIO_writePinLogic>
    1200:	89 83       	std	Y+1, r24	; 0x01
    if (GPIO_OK == gpioRet) {
    1202:	89 81       	ldd	r24, Y+1	; 0x01
    1204:	88 23       	and	r24, r24
    1206:	11 f4       	brne	.+4      	; 0x120c <LED_turnOn+0x5a>
      ledRet = LED_OK;
    1208:	1a 82       	std	Y+2, r1	; 0x02
    120a:	05 c0       	rjmp	.+10     	; 0x1216 <LED_turnOn+0x64>
    } else {
      ledRet = LED_NOK;
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	8a 83       	std	Y+2, r24	; 0x02
    1210:	02 c0       	rjmp	.+4      	; 0x1216 <LED_turnOn+0x64>
    }
  } else {
    ledRet = LED_PTR_NULL;
    1212:	82 e0       	ldi	r24, 0x02	; 2
    1214:	8a 83       	std	Y+2, r24	; 0x02
  }
  return ledRet;
    1216:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1218:	28 96       	adiw	r28, 0x08	; 8
    121a:	0f b6       	in	r0, 0x3f	; 63
    121c:	f8 94       	cli
    121e:	de bf       	out	0x3e, r29	; 62
    1220:	0f be       	out	0x3f, r0	; 63
    1222:	cd bf       	out	0x3d, r28	; 61
    1224:	cf 91       	pop	r28
    1226:	df 91       	pop	r29
    1228:	08 95       	ret

0000122a <LED_turnOff>:
EN_LED_systemStates_t LED_turnOff(ST_LED_cfg_t const *ST_ptrLedInstance) {
    122a:	df 93       	push	r29
    122c:	cf 93       	push	r28
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	28 97       	sbiw	r28, 0x08	; 8
    1234:	0f b6       	in	r0, 0x3f	; 63
    1236:	f8 94       	cli
    1238:	de bf       	out	0x3e, r29	; 62
    123a:	0f be       	out	0x3f, r0	; 63
    123c:	cd bf       	out	0x3d, r28	; 61
    123e:	98 87       	std	Y+8, r25	; 0x08
    1240:	8f 83       	std	Y+7, r24	; 0x07
  EN_LED_systemStates_t ledRet = LED_NOK;
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t gpioRet = GPIO_NOK;
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrLedInstance) {
    124a:	8f 81       	ldd	r24, Y+7	; 0x07
    124c:	98 85       	ldd	r25, Y+8	; 0x08
    124e:	00 97       	sbiw	r24, 0x00	; 0
    1250:	e1 f0       	breq	.+56     	; 0x128a <LED_turnOff+0x60>

    ST_GPIO_cfg_t copyOfLedInstance = {
        .logicOnPin = (EN_GPIO_pinLogic_t)ST_ptrLedInstance->ledDefaultState,
        .pinDirection = GPIO_OUTPUT,
        .pinNumber = ST_ptrLedInstance->ledPinNumber,
        .portName = ST_ptrLedInstance->ledPortName};
    1252:	ef 81       	ldd	r30, Y+7	; 0x07
    1254:	f8 85       	ldd	r31, Y+8	; 0x08
    1256:	81 81       	ldd	r24, Z+1	; 0x01
    1258:	ef 81       	ldd	r30, Y+7	; 0x07
    125a:	f8 85       	ldd	r31, Y+8	; 0x08
    125c:	92 81       	ldd	r25, Z+2	; 0x02
    125e:	ef 81       	ldd	r30, Y+7	; 0x07
    1260:	f8 85       	ldd	r31, Y+8	; 0x08
    1262:	20 81       	ld	r18, Z
    1264:	8b 83       	std	Y+3, r24	; 0x03
    1266:	9c 83       	std	Y+4, r25	; 0x04
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	8d 83       	std	Y+5, r24	; 0x05
    126c:	2e 83       	std	Y+6, r18	; 0x06
    gpioRet = GPIO_writePinLogic(&copyOfLedInstance, GPIO_LOW);
    126e:	ce 01       	movw	r24, r28
    1270:	03 96       	adiw	r24, 0x03	; 3
    1272:	60 e0       	ldi	r22, 0x00	; 0
    1274:	0e 94 55 06 	call	0xcaa	; 0xcaa <GPIO_writePinLogic>
    1278:	89 83       	std	Y+1, r24	; 0x01
    if (GPIO_OK == gpioRet) {
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	88 23       	and	r24, r24
    127e:	11 f4       	brne	.+4      	; 0x1284 <LED_turnOff+0x5a>
      ledRet = LED_OK;
    1280:	1a 82       	std	Y+2, r1	; 0x02
    1282:	05 c0       	rjmp	.+10     	; 0x128e <LED_turnOff+0x64>
    } else {
      ledRet = LED_NOK;
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	8a 83       	std	Y+2, r24	; 0x02
    1288:	02 c0       	rjmp	.+4      	; 0x128e <LED_turnOff+0x64>
    }
  } else {
    ledRet = LED_PTR_NULL;
    128a:	82 e0       	ldi	r24, 0x02	; 2
    128c:	8a 83       	std	Y+2, r24	; 0x02
  }
  return ledRet;
    128e:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1290:	28 96       	adiw	r28, 0x08	; 8
    1292:	0f b6       	in	r0, 0x3f	; 63
    1294:	f8 94       	cli
    1296:	de bf       	out	0x3e, r29	; 62
    1298:	0f be       	out	0x3f, r0	; 63
    129a:	cd bf       	out	0x3d, r28	; 61
    129c:	cf 91       	pop	r28
    129e:	df 91       	pop	r29
    12a0:	08 95       	ret

000012a2 <LED_toggle>:
EN_LED_systemStates_t LED_toggle(ST_LED_cfg_t const *ST_ptrLedInstance) {
    12a2:	df 93       	push	r29
    12a4:	cf 93       	push	r28
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	28 97       	sbiw	r28, 0x08	; 8
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	f8 94       	cli
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	cd bf       	out	0x3d, r28	; 61
    12b6:	98 87       	std	Y+8, r25	; 0x08
    12b8:	8f 83       	std	Y+7, r24	; 0x07
  EN_LED_systemStates_t ledRet = LED_NOK;
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	8a 83       	std	Y+2, r24	; 0x02
  EN_GPIO_systemState_t gpioRet = GPIO_NOK;
    12be:	81 e0       	ldi	r24, 0x01	; 1
    12c0:	89 83       	std	Y+1, r24	; 0x01
  if (PTR_NULL != ST_ptrLedInstance) {
    12c2:	8f 81       	ldd	r24, Y+7	; 0x07
    12c4:	98 85       	ldd	r25, Y+8	; 0x08
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	d9 f0       	breq	.+54     	; 0x1300 <LED_toggle+0x5e>

    ST_GPIO_cfg_t copyOfLedInstance = {
        .logicOnPin = (EN_GPIO_pinLogic_t)ST_ptrLedInstance->ledDefaultState,
        .pinDirection = GPIO_OUTPUT,
        .pinNumber = ST_ptrLedInstance->ledPinNumber,
        .portName = ST_ptrLedInstance->ledPortName};
    12ca:	ef 81       	ldd	r30, Y+7	; 0x07
    12cc:	f8 85       	ldd	r31, Y+8	; 0x08
    12ce:	81 81       	ldd	r24, Z+1	; 0x01
    12d0:	ef 81       	ldd	r30, Y+7	; 0x07
    12d2:	f8 85       	ldd	r31, Y+8	; 0x08
    12d4:	92 81       	ldd	r25, Z+2	; 0x02
    12d6:	ef 81       	ldd	r30, Y+7	; 0x07
    12d8:	f8 85       	ldd	r31, Y+8	; 0x08
    12da:	20 81       	ld	r18, Z
    12dc:	8b 83       	std	Y+3, r24	; 0x03
    12de:	9c 83       	std	Y+4, r25	; 0x04
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	8d 83       	std	Y+5, r24	; 0x05
    12e4:	2e 83       	std	Y+6, r18	; 0x06
    gpioRet = GPIO_togglePinLogic(&copyOfLedInstance);
    12e6:	ce 01       	movw	r24, r28
    12e8:	03 96       	adiw	r24, 0x03	; 3
    12ea:	0e 94 18 07 	call	0xe30	; 0xe30 <GPIO_togglePinLogic>
    12ee:	89 83       	std	Y+1, r24	; 0x01
    if (GPIO_OK == gpioRet) {
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	88 23       	and	r24, r24
    12f4:	11 f4       	brne	.+4      	; 0x12fa <LED_toggle+0x58>
      ledRet = LED_OK;
    12f6:	1a 82       	std	Y+2, r1	; 0x02
    12f8:	05 c0       	rjmp	.+10     	; 0x1304 <LED_toggle+0x62>
    } else {
      ledRet = LED_NOK;
    12fa:	81 e0       	ldi	r24, 0x01	; 1
    12fc:	8a 83       	std	Y+2, r24	; 0x02
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <LED_toggle+0x62>
    }
  } else {
    ledRet = LED_PTR_NULL;
    1300:	82 e0       	ldi	r24, 0x02	; 2
    1302:	8a 83       	std	Y+2, r24	; 0x02
  }
  return ledRet;
    1304:	8a 81       	ldd	r24, Y+2	; 0x02
    1306:	28 96       	adiw	r28, 0x08	; 8
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	de bf       	out	0x3e, r29	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	cd bf       	out	0x3d, r28	; 61
    1312:	cf 91       	pop	r28
    1314:	df 91       	pop	r29
    1316:	08 95       	ret

00001318 <appInit>:

ST_LED_cfg_t pinA7Led = {.ledDefaultState = LED_STATUES_OFF,
                         .ledPortName = GPIO_PORTA,
                         .ledPinNumber = GPIO_PIN7};

void appInit() {
    1318:	df 93       	push	r29
    131a:	cf 93       	push	r28
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
  LED_init(&pinA0Led);
    1320:	86 e9       	ldi	r24, 0x96	; 150
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA1Led);
    1328:	80 e8       	ldi	r24, 0x80	; 128
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA2Led);
    1330:	83 e8       	ldi	r24, 0x83	; 131
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA3Led);
    1338:	86 e8       	ldi	r24, 0x86	; 134
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA4Led);
    1340:	89 e8       	ldi	r24, 0x89	; 137
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA5Led);
    1348:	8c e8       	ldi	r24, 0x8C	; 140
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA6Led);
    1350:	8f e8       	ldi	r24, 0x8F	; 143
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
  LED_init(&pinA7Led);
    1358:	82 e9       	ldi	r24, 0x92	; 146
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	0e 94 9e 08 	call	0x113c	; 0x113c <LED_init>
}
    1360:	cf 91       	pop	r28
    1362:	df 91       	pop	r29
    1364:	08 95       	ret

00001366 <appMain>:
void appMain() {
    1366:	0f 93       	push	r16
    1368:	1f 93       	push	r17
    136a:	df 93       	push	r29
    136c:	cf 93       	push	r28
    136e:	cd b7       	in	r28, 0x3d	; 61
    1370:	de b7       	in	r29, 0x3e	; 62
    1372:	c0 5e       	subi	r28, 0xE0	; 224
    1374:	d0 40       	sbci	r29, 0x00	; 0
    1376:	0f b6       	in	r0, 0x3f	; 63
    1378:	f8 94       	cli
    137a:	de bf       	out	0x3e, r29	; 62
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	cd bf       	out	0x3d, r28	; 61
  LED_turnOn(&pinA0Led);
    1380:	86 e9       	ldi	r24, 0x96	; 150
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1388:	fe 01       	movw	r30, r28
    138a:	e3 52       	subi	r30, 0x23	; 35
    138c:	ff 4f       	sbci	r31, 0xFF	; 255
    138e:	80 e0       	ldi	r24, 0x00	; 0
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	aa e7       	ldi	r26, 0x7A	; 122
    1394:	b3 e4       	ldi	r27, 0x43	; 67
    1396:	80 83       	st	Z, r24
    1398:	91 83       	std	Z+1, r25	; 0x01
    139a:	a2 83       	std	Z+2, r26	; 0x02
    139c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    139e:	8e 01       	movw	r16, r28
    13a0:	07 52       	subi	r16, 0x27	; 39
    13a2:	1f 4f       	sbci	r17, 0xFF	; 255
    13a4:	fe 01       	movw	r30, r28
    13a6:	e3 52       	subi	r30, 0x23	; 35
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	60 81       	ld	r22, Z
    13ac:	71 81       	ldd	r23, Z+1	; 0x01
    13ae:	82 81       	ldd	r24, Z+2	; 0x02
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	4a ef       	ldi	r20, 0xFA	; 250
    13b8:	54 e4       	ldi	r21, 0x44	; 68
    13ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13be:	dc 01       	movw	r26, r24
    13c0:	cb 01       	movw	r24, r22
    13c2:	f8 01       	movw	r30, r16
    13c4:	80 83       	st	Z, r24
    13c6:	91 83       	std	Z+1, r25	; 0x01
    13c8:	a2 83       	std	Z+2, r26	; 0x02
    13ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13cc:	fe 01       	movw	r30, r28
    13ce:	e7 52       	subi	r30, 0x27	; 39
    13d0:	ff 4f       	sbci	r31, 0xFF	; 255
    13d2:	60 81       	ld	r22, Z
    13d4:	71 81       	ldd	r23, Z+1	; 0x01
    13d6:	82 81       	ldd	r24, Z+2	; 0x02
    13d8:	93 81       	ldd	r25, Z+3	; 0x03
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	40 e8       	ldi	r20, 0x80	; 128
    13e0:	5f e3       	ldi	r21, 0x3F	; 63
    13e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    13e6:	88 23       	and	r24, r24
    13e8:	44 f4       	brge	.+16     	; 0x13fa <appMain+0x94>
		__ticks = 1;
    13ea:	fe 01       	movw	r30, r28
    13ec:	e9 52       	subi	r30, 0x29	; 41
    13ee:	ff 4f       	sbci	r31, 0xFF	; 255
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	91 83       	std	Z+1, r25	; 0x01
    13f6:	80 83       	st	Z, r24
    13f8:	64 c0       	rjmp	.+200    	; 0x14c2 <appMain+0x15c>
	else if (__tmp > 65535)
    13fa:	fe 01       	movw	r30, r28
    13fc:	e7 52       	subi	r30, 0x27	; 39
    13fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1400:	60 81       	ld	r22, Z
    1402:	71 81       	ldd	r23, Z+1	; 0x01
    1404:	82 81       	ldd	r24, Z+2	; 0x02
    1406:	93 81       	ldd	r25, Z+3	; 0x03
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	3f ef       	ldi	r19, 0xFF	; 255
    140c:	4f e7       	ldi	r20, 0x7F	; 127
    140e:	57 e4       	ldi	r21, 0x47	; 71
    1410:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1414:	18 16       	cp	r1, r24
    1416:	0c f0       	brlt	.+2      	; 0x141a <appMain+0xb4>
    1418:	43 c0       	rjmp	.+134    	; 0x14a0 <appMain+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    141a:	fe 01       	movw	r30, r28
    141c:	e3 52       	subi	r30, 0x23	; 35
    141e:	ff 4f       	sbci	r31, 0xFF	; 255
    1420:	60 81       	ld	r22, Z
    1422:	71 81       	ldd	r23, Z+1	; 0x01
    1424:	82 81       	ldd	r24, Z+2	; 0x02
    1426:	93 81       	ldd	r25, Z+3	; 0x03
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	40 e2       	ldi	r20, 0x20	; 32
    142e:	51 e4       	ldi	r21, 0x41	; 65
    1430:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1434:	dc 01       	movw	r26, r24
    1436:	cb 01       	movw	r24, r22
    1438:	8e 01       	movw	r16, r28
    143a:	09 52       	subi	r16, 0x29	; 41
    143c:	1f 4f       	sbci	r17, 0xFF	; 255
    143e:	bc 01       	movw	r22, r24
    1440:	cd 01       	movw	r24, r26
    1442:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1446:	dc 01       	movw	r26, r24
    1448:	cb 01       	movw	r24, r22
    144a:	f8 01       	movw	r30, r16
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	80 83       	st	Z, r24
    1450:	1f c0       	rjmp	.+62     	; 0x1490 <appMain+0x12a>
    1452:	fe 01       	movw	r30, r28
    1454:	eb 52       	subi	r30, 0x2B	; 43
    1456:	ff 4f       	sbci	r31, 0xFF	; 255
    1458:	88 ec       	ldi	r24, 0xC8	; 200
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	91 83       	std	Z+1, r25	; 0x01
    145e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1460:	fe 01       	movw	r30, r28
    1462:	eb 52       	subi	r30, 0x2B	; 43
    1464:	ff 4f       	sbci	r31, 0xFF	; 255
    1466:	80 81       	ld	r24, Z
    1468:	91 81       	ldd	r25, Z+1	; 0x01
    146a:	01 97       	sbiw	r24, 0x01	; 1
    146c:	f1 f7       	brne	.-4      	; 0x146a <appMain+0x104>
    146e:	fe 01       	movw	r30, r28
    1470:	eb 52       	subi	r30, 0x2B	; 43
    1472:	ff 4f       	sbci	r31, 0xFF	; 255
    1474:	91 83       	std	Z+1, r25	; 0x01
    1476:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1478:	de 01       	movw	r26, r28
    147a:	a9 52       	subi	r26, 0x29	; 41
    147c:	bf 4f       	sbci	r27, 0xFF	; 255
    147e:	fe 01       	movw	r30, r28
    1480:	e9 52       	subi	r30, 0x29	; 41
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	80 81       	ld	r24, Z
    1486:	91 81       	ldd	r25, Z+1	; 0x01
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	11 96       	adiw	r26, 0x01	; 1
    148c:	9c 93       	st	X, r25
    148e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1490:	fe 01       	movw	r30, r28
    1492:	e9 52       	subi	r30, 0x29	; 41
    1494:	ff 4f       	sbci	r31, 0xFF	; 255
    1496:	80 81       	ld	r24, Z
    1498:	91 81       	ldd	r25, Z+1	; 0x01
    149a:	00 97       	sbiw	r24, 0x00	; 0
    149c:	d1 f6       	brne	.-76     	; 0x1452 <appMain+0xec>
    149e:	27 c0       	rjmp	.+78     	; 0x14ee <appMain+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14a0:	8e 01       	movw	r16, r28
    14a2:	09 52       	subi	r16, 0x29	; 41
    14a4:	1f 4f       	sbci	r17, 0xFF	; 255
    14a6:	fe 01       	movw	r30, r28
    14a8:	e7 52       	subi	r30, 0x27	; 39
    14aa:	ff 4f       	sbci	r31, 0xFF	; 255
    14ac:	60 81       	ld	r22, Z
    14ae:	71 81       	ldd	r23, Z+1	; 0x01
    14b0:	82 81       	ldd	r24, Z+2	; 0x02
    14b2:	93 81       	ldd	r25, Z+3	; 0x03
    14b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14b8:	dc 01       	movw	r26, r24
    14ba:	cb 01       	movw	r24, r22
    14bc:	f8 01       	movw	r30, r16
    14be:	91 83       	std	Z+1, r25	; 0x01
    14c0:	80 83       	st	Z, r24
    14c2:	de 01       	movw	r26, r28
    14c4:	ad 52       	subi	r26, 0x2D	; 45
    14c6:	bf 4f       	sbci	r27, 0xFF	; 255
    14c8:	fe 01       	movw	r30, r28
    14ca:	e9 52       	subi	r30, 0x29	; 41
    14cc:	ff 4f       	sbci	r31, 0xFF	; 255
    14ce:	80 81       	ld	r24, Z
    14d0:	91 81       	ldd	r25, Z+1	; 0x01
    14d2:	8d 93       	st	X+, r24
    14d4:	9c 93       	st	X, r25
    14d6:	fe 01       	movw	r30, r28
    14d8:	ed 52       	subi	r30, 0x2D	; 45
    14da:	ff 4f       	sbci	r31, 0xFF	; 255
    14dc:	80 81       	ld	r24, Z
    14de:	91 81       	ldd	r25, Z+1	; 0x01
    14e0:	01 97       	sbiw	r24, 0x01	; 1
    14e2:	f1 f7       	brne	.-4      	; 0x14e0 <appMain+0x17a>
    14e4:	fe 01       	movw	r30, r28
    14e6:	ed 52       	subi	r30, 0x2D	; 45
    14e8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA1Led);
    14ee:	80 e8       	ldi	r24, 0x80	; 128
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    14f6:	fe 01       	movw	r30, r28
    14f8:	e1 53       	subi	r30, 0x31	; 49
    14fa:	ff 4f       	sbci	r31, 0xFF	; 255
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	aa e7       	ldi	r26, 0x7A	; 122
    1502:	b3 e4       	ldi	r27, 0x43	; 67
    1504:	80 83       	st	Z, r24
    1506:	91 83       	std	Z+1, r25	; 0x01
    1508:	a2 83       	std	Z+2, r26	; 0x02
    150a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    150c:	8e 01       	movw	r16, r28
    150e:	05 53       	subi	r16, 0x35	; 53
    1510:	1f 4f       	sbci	r17, 0xFF	; 255
    1512:	fe 01       	movw	r30, r28
    1514:	e1 53       	subi	r30, 0x31	; 49
    1516:	ff 4f       	sbci	r31, 0xFF	; 255
    1518:	60 81       	ld	r22, Z
    151a:	71 81       	ldd	r23, Z+1	; 0x01
    151c:	82 81       	ldd	r24, Z+2	; 0x02
    151e:	93 81       	ldd	r25, Z+3	; 0x03
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	4a ef       	ldi	r20, 0xFA	; 250
    1526:	54 e4       	ldi	r21, 0x44	; 68
    1528:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    152c:	dc 01       	movw	r26, r24
    152e:	cb 01       	movw	r24, r22
    1530:	f8 01       	movw	r30, r16
    1532:	80 83       	st	Z, r24
    1534:	91 83       	std	Z+1, r25	; 0x01
    1536:	a2 83       	std	Z+2, r26	; 0x02
    1538:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    153a:	fe 01       	movw	r30, r28
    153c:	e5 53       	subi	r30, 0x35	; 53
    153e:	ff 4f       	sbci	r31, 0xFF	; 255
    1540:	60 81       	ld	r22, Z
    1542:	71 81       	ldd	r23, Z+1	; 0x01
    1544:	82 81       	ldd	r24, Z+2	; 0x02
    1546:	93 81       	ldd	r25, Z+3	; 0x03
    1548:	20 e0       	ldi	r18, 0x00	; 0
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	40 e8       	ldi	r20, 0x80	; 128
    154e:	5f e3       	ldi	r21, 0x3F	; 63
    1550:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1554:	88 23       	and	r24, r24
    1556:	44 f4       	brge	.+16     	; 0x1568 <appMain+0x202>
		__ticks = 1;
    1558:	fe 01       	movw	r30, r28
    155a:	e7 53       	subi	r30, 0x37	; 55
    155c:	ff 4f       	sbci	r31, 0xFF	; 255
    155e:	81 e0       	ldi	r24, 0x01	; 1
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	80 83       	st	Z, r24
    1566:	64 c0       	rjmp	.+200    	; 0x1630 <appMain+0x2ca>
	else if (__tmp > 65535)
    1568:	fe 01       	movw	r30, r28
    156a:	e5 53       	subi	r30, 0x35	; 53
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	60 81       	ld	r22, Z
    1570:	71 81       	ldd	r23, Z+1	; 0x01
    1572:	82 81       	ldd	r24, Z+2	; 0x02
    1574:	93 81       	ldd	r25, Z+3	; 0x03
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	3f ef       	ldi	r19, 0xFF	; 255
    157a:	4f e7       	ldi	r20, 0x7F	; 127
    157c:	57 e4       	ldi	r21, 0x47	; 71
    157e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1582:	18 16       	cp	r1, r24
    1584:	0c f0       	brlt	.+2      	; 0x1588 <appMain+0x222>
    1586:	43 c0       	rjmp	.+134    	; 0x160e <appMain+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1588:	fe 01       	movw	r30, r28
    158a:	e1 53       	subi	r30, 0x31	; 49
    158c:	ff 4f       	sbci	r31, 0xFF	; 255
    158e:	60 81       	ld	r22, Z
    1590:	71 81       	ldd	r23, Z+1	; 0x01
    1592:	82 81       	ldd	r24, Z+2	; 0x02
    1594:	93 81       	ldd	r25, Z+3	; 0x03
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	40 e2       	ldi	r20, 0x20	; 32
    159c:	51 e4       	ldi	r21, 0x41	; 65
    159e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15a2:	dc 01       	movw	r26, r24
    15a4:	cb 01       	movw	r24, r22
    15a6:	8e 01       	movw	r16, r28
    15a8:	07 53       	subi	r16, 0x37	; 55
    15aa:	1f 4f       	sbci	r17, 0xFF	; 255
    15ac:	bc 01       	movw	r22, r24
    15ae:	cd 01       	movw	r24, r26
    15b0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15b4:	dc 01       	movw	r26, r24
    15b6:	cb 01       	movw	r24, r22
    15b8:	f8 01       	movw	r30, r16
    15ba:	91 83       	std	Z+1, r25	; 0x01
    15bc:	80 83       	st	Z, r24
    15be:	1f c0       	rjmp	.+62     	; 0x15fe <appMain+0x298>
    15c0:	fe 01       	movw	r30, r28
    15c2:	e9 53       	subi	r30, 0x39	; 57
    15c4:	ff 4f       	sbci	r31, 0xFF	; 255
    15c6:	88 ec       	ldi	r24, 0xC8	; 200
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
    15ce:	fe 01       	movw	r30, r28
    15d0:	e9 53       	subi	r30, 0x39	; 57
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	80 81       	ld	r24, Z
    15d6:	91 81       	ldd	r25, Z+1	; 0x01
    15d8:	01 97       	sbiw	r24, 0x01	; 1
    15da:	f1 f7       	brne	.-4      	; 0x15d8 <appMain+0x272>
    15dc:	fe 01       	movw	r30, r28
    15de:	e9 53       	subi	r30, 0x39	; 57
    15e0:	ff 4f       	sbci	r31, 0xFF	; 255
    15e2:	91 83       	std	Z+1, r25	; 0x01
    15e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e6:	de 01       	movw	r26, r28
    15e8:	a7 53       	subi	r26, 0x37	; 55
    15ea:	bf 4f       	sbci	r27, 0xFF	; 255
    15ec:	fe 01       	movw	r30, r28
    15ee:	e7 53       	subi	r30, 0x37	; 55
    15f0:	ff 4f       	sbci	r31, 0xFF	; 255
    15f2:	80 81       	ld	r24, Z
    15f4:	91 81       	ldd	r25, Z+1	; 0x01
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	11 96       	adiw	r26, 0x01	; 1
    15fa:	9c 93       	st	X, r25
    15fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15fe:	fe 01       	movw	r30, r28
    1600:	e7 53       	subi	r30, 0x37	; 55
    1602:	ff 4f       	sbci	r31, 0xFF	; 255
    1604:	80 81       	ld	r24, Z
    1606:	91 81       	ldd	r25, Z+1	; 0x01
    1608:	00 97       	sbiw	r24, 0x00	; 0
    160a:	d1 f6       	brne	.-76     	; 0x15c0 <appMain+0x25a>
    160c:	27 c0       	rjmp	.+78     	; 0x165c <appMain+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    160e:	8e 01       	movw	r16, r28
    1610:	07 53       	subi	r16, 0x37	; 55
    1612:	1f 4f       	sbci	r17, 0xFF	; 255
    1614:	fe 01       	movw	r30, r28
    1616:	e5 53       	subi	r30, 0x35	; 53
    1618:	ff 4f       	sbci	r31, 0xFF	; 255
    161a:	60 81       	ld	r22, Z
    161c:	71 81       	ldd	r23, Z+1	; 0x01
    161e:	82 81       	ldd	r24, Z+2	; 0x02
    1620:	93 81       	ldd	r25, Z+3	; 0x03
    1622:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1626:	dc 01       	movw	r26, r24
    1628:	cb 01       	movw	r24, r22
    162a:	f8 01       	movw	r30, r16
    162c:	91 83       	std	Z+1, r25	; 0x01
    162e:	80 83       	st	Z, r24
    1630:	de 01       	movw	r26, r28
    1632:	ab 53       	subi	r26, 0x3B	; 59
    1634:	bf 4f       	sbci	r27, 0xFF	; 255
    1636:	fe 01       	movw	r30, r28
    1638:	e7 53       	subi	r30, 0x37	; 55
    163a:	ff 4f       	sbci	r31, 0xFF	; 255
    163c:	80 81       	ld	r24, Z
    163e:	91 81       	ldd	r25, Z+1	; 0x01
    1640:	8d 93       	st	X+, r24
    1642:	9c 93       	st	X, r25
    1644:	fe 01       	movw	r30, r28
    1646:	eb 53       	subi	r30, 0x3B	; 59
    1648:	ff 4f       	sbci	r31, 0xFF	; 255
    164a:	80 81       	ld	r24, Z
    164c:	91 81       	ldd	r25, Z+1	; 0x01
    164e:	01 97       	sbiw	r24, 0x01	; 1
    1650:	f1 f7       	brne	.-4      	; 0x164e <appMain+0x2e8>
    1652:	fe 01       	movw	r30, r28
    1654:	eb 53       	subi	r30, 0x3B	; 59
    1656:	ff 4f       	sbci	r31, 0xFF	; 255
    1658:	91 83       	std	Z+1, r25	; 0x01
    165a:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA2Led);
    165c:	83 e8       	ldi	r24, 0x83	; 131
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1664:	fe 01       	movw	r30, r28
    1666:	ef 53       	subi	r30, 0x3F	; 63
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	80 e0       	ldi	r24, 0x00	; 0
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	aa e7       	ldi	r26, 0x7A	; 122
    1670:	b3 e4       	ldi	r27, 0x43	; 67
    1672:	80 83       	st	Z, r24
    1674:	91 83       	std	Z+1, r25	; 0x01
    1676:	a2 83       	std	Z+2, r26	; 0x02
    1678:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    167a:	8e 01       	movw	r16, r28
    167c:	03 54       	subi	r16, 0x43	; 67
    167e:	1f 4f       	sbci	r17, 0xFF	; 255
    1680:	fe 01       	movw	r30, r28
    1682:	ef 53       	subi	r30, 0x3F	; 63
    1684:	ff 4f       	sbci	r31, 0xFF	; 255
    1686:	60 81       	ld	r22, Z
    1688:	71 81       	ldd	r23, Z+1	; 0x01
    168a:	82 81       	ldd	r24, Z+2	; 0x02
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	4a ef       	ldi	r20, 0xFA	; 250
    1694:	54 e4       	ldi	r21, 0x44	; 68
    1696:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	f8 01       	movw	r30, r16
    16a0:	80 83       	st	Z, r24
    16a2:	91 83       	std	Z+1, r25	; 0x01
    16a4:	a2 83       	std	Z+2, r26	; 0x02
    16a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16a8:	fe 01       	movw	r30, r28
    16aa:	e3 54       	subi	r30, 0x43	; 67
    16ac:	ff 4f       	sbci	r31, 0xFF	; 255
    16ae:	60 81       	ld	r22, Z
    16b0:	71 81       	ldd	r23, Z+1	; 0x01
    16b2:	82 81       	ldd	r24, Z+2	; 0x02
    16b4:	93 81       	ldd	r25, Z+3	; 0x03
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	40 e8       	ldi	r20, 0x80	; 128
    16bc:	5f e3       	ldi	r21, 0x3F	; 63
    16be:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    16c2:	88 23       	and	r24, r24
    16c4:	44 f4       	brge	.+16     	; 0x16d6 <appMain+0x370>
		__ticks = 1;
    16c6:	fe 01       	movw	r30, r28
    16c8:	e5 54       	subi	r30, 0x45	; 69
    16ca:	ff 4f       	sbci	r31, 0xFF	; 255
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	91 83       	std	Z+1, r25	; 0x01
    16d2:	80 83       	st	Z, r24
    16d4:	64 c0       	rjmp	.+200    	; 0x179e <appMain+0x438>
	else if (__tmp > 65535)
    16d6:	fe 01       	movw	r30, r28
    16d8:	e3 54       	subi	r30, 0x43	; 67
    16da:	ff 4f       	sbci	r31, 0xFF	; 255
    16dc:	60 81       	ld	r22, Z
    16de:	71 81       	ldd	r23, Z+1	; 0x01
    16e0:	82 81       	ldd	r24, Z+2	; 0x02
    16e2:	93 81       	ldd	r25, Z+3	; 0x03
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	3f ef       	ldi	r19, 0xFF	; 255
    16e8:	4f e7       	ldi	r20, 0x7F	; 127
    16ea:	57 e4       	ldi	r21, 0x47	; 71
    16ec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    16f0:	18 16       	cp	r1, r24
    16f2:	0c f0       	brlt	.+2      	; 0x16f6 <appMain+0x390>
    16f4:	43 c0       	rjmp	.+134    	; 0x177c <appMain+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16f6:	fe 01       	movw	r30, r28
    16f8:	ef 53       	subi	r30, 0x3F	; 63
    16fa:	ff 4f       	sbci	r31, 0xFF	; 255
    16fc:	60 81       	ld	r22, Z
    16fe:	71 81       	ldd	r23, Z+1	; 0x01
    1700:	82 81       	ldd	r24, Z+2	; 0x02
    1702:	93 81       	ldd	r25, Z+3	; 0x03
    1704:	20 e0       	ldi	r18, 0x00	; 0
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	40 e2       	ldi	r20, 0x20	; 32
    170a:	51 e4       	ldi	r21, 0x41	; 65
    170c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1710:	dc 01       	movw	r26, r24
    1712:	cb 01       	movw	r24, r22
    1714:	8e 01       	movw	r16, r28
    1716:	05 54       	subi	r16, 0x45	; 69
    1718:	1f 4f       	sbci	r17, 0xFF	; 255
    171a:	bc 01       	movw	r22, r24
    171c:	cd 01       	movw	r24, r26
    171e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	f8 01       	movw	r30, r16
    1728:	91 83       	std	Z+1, r25	; 0x01
    172a:	80 83       	st	Z, r24
    172c:	1f c0       	rjmp	.+62     	; 0x176c <appMain+0x406>
    172e:	fe 01       	movw	r30, r28
    1730:	e7 54       	subi	r30, 0x47	; 71
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	88 ec       	ldi	r24, 0xC8	; 200
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	91 83       	std	Z+1, r25	; 0x01
    173a:	80 83       	st	Z, r24
    173c:	fe 01       	movw	r30, r28
    173e:	e7 54       	subi	r30, 0x47	; 71
    1740:	ff 4f       	sbci	r31, 0xFF	; 255
    1742:	80 81       	ld	r24, Z
    1744:	91 81       	ldd	r25, Z+1	; 0x01
    1746:	01 97       	sbiw	r24, 0x01	; 1
    1748:	f1 f7       	brne	.-4      	; 0x1746 <appMain+0x3e0>
    174a:	fe 01       	movw	r30, r28
    174c:	e7 54       	subi	r30, 0x47	; 71
    174e:	ff 4f       	sbci	r31, 0xFF	; 255
    1750:	91 83       	std	Z+1, r25	; 0x01
    1752:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1754:	de 01       	movw	r26, r28
    1756:	a5 54       	subi	r26, 0x45	; 69
    1758:	bf 4f       	sbci	r27, 0xFF	; 255
    175a:	fe 01       	movw	r30, r28
    175c:	e5 54       	subi	r30, 0x45	; 69
    175e:	ff 4f       	sbci	r31, 0xFF	; 255
    1760:	80 81       	ld	r24, Z
    1762:	91 81       	ldd	r25, Z+1	; 0x01
    1764:	01 97       	sbiw	r24, 0x01	; 1
    1766:	11 96       	adiw	r26, 0x01	; 1
    1768:	9c 93       	st	X, r25
    176a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    176c:	fe 01       	movw	r30, r28
    176e:	e5 54       	subi	r30, 0x45	; 69
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	80 81       	ld	r24, Z
    1774:	91 81       	ldd	r25, Z+1	; 0x01
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	d1 f6       	brne	.-76     	; 0x172e <appMain+0x3c8>
    177a:	27 c0       	rjmp	.+78     	; 0x17ca <appMain+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    177c:	8e 01       	movw	r16, r28
    177e:	05 54       	subi	r16, 0x45	; 69
    1780:	1f 4f       	sbci	r17, 0xFF	; 255
    1782:	fe 01       	movw	r30, r28
    1784:	e3 54       	subi	r30, 0x43	; 67
    1786:	ff 4f       	sbci	r31, 0xFF	; 255
    1788:	60 81       	ld	r22, Z
    178a:	71 81       	ldd	r23, Z+1	; 0x01
    178c:	82 81       	ldd	r24, Z+2	; 0x02
    178e:	93 81       	ldd	r25, Z+3	; 0x03
    1790:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1794:	dc 01       	movw	r26, r24
    1796:	cb 01       	movw	r24, r22
    1798:	f8 01       	movw	r30, r16
    179a:	91 83       	std	Z+1, r25	; 0x01
    179c:	80 83       	st	Z, r24
    179e:	de 01       	movw	r26, r28
    17a0:	a9 54       	subi	r26, 0x49	; 73
    17a2:	bf 4f       	sbci	r27, 0xFF	; 255
    17a4:	fe 01       	movw	r30, r28
    17a6:	e5 54       	subi	r30, 0x45	; 69
    17a8:	ff 4f       	sbci	r31, 0xFF	; 255
    17aa:	80 81       	ld	r24, Z
    17ac:	91 81       	ldd	r25, Z+1	; 0x01
    17ae:	8d 93       	st	X+, r24
    17b0:	9c 93       	st	X, r25
    17b2:	fe 01       	movw	r30, r28
    17b4:	e9 54       	subi	r30, 0x49	; 73
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	80 81       	ld	r24, Z
    17ba:	91 81       	ldd	r25, Z+1	; 0x01
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	f1 f7       	brne	.-4      	; 0x17bc <appMain+0x456>
    17c0:	fe 01       	movw	r30, r28
    17c2:	e9 54       	subi	r30, 0x49	; 73
    17c4:	ff 4f       	sbci	r31, 0xFF	; 255
    17c6:	91 83       	std	Z+1, r25	; 0x01
    17c8:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA3Led);
    17ca:	86 e8       	ldi	r24, 0x86	; 134
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    17d2:	fe 01       	movw	r30, r28
    17d4:	ed 54       	subi	r30, 0x4D	; 77
    17d6:	ff 4f       	sbci	r31, 0xFF	; 255
    17d8:	80 e0       	ldi	r24, 0x00	; 0
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	aa e7       	ldi	r26, 0x7A	; 122
    17de:	b3 e4       	ldi	r27, 0x43	; 67
    17e0:	80 83       	st	Z, r24
    17e2:	91 83       	std	Z+1, r25	; 0x01
    17e4:	a2 83       	std	Z+2, r26	; 0x02
    17e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17e8:	8e 01       	movw	r16, r28
    17ea:	01 55       	subi	r16, 0x51	; 81
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	fe 01       	movw	r30, r28
    17f0:	ed 54       	subi	r30, 0x4D	; 77
    17f2:	ff 4f       	sbci	r31, 0xFF	; 255
    17f4:	60 81       	ld	r22, Z
    17f6:	71 81       	ldd	r23, Z+1	; 0x01
    17f8:	82 81       	ldd	r24, Z+2	; 0x02
    17fa:	93 81       	ldd	r25, Z+3	; 0x03
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	4a ef       	ldi	r20, 0xFA	; 250
    1802:	54 e4       	ldi	r21, 0x44	; 68
    1804:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1808:	dc 01       	movw	r26, r24
    180a:	cb 01       	movw	r24, r22
    180c:	f8 01       	movw	r30, r16
    180e:	80 83       	st	Z, r24
    1810:	91 83       	std	Z+1, r25	; 0x01
    1812:	a2 83       	std	Z+2, r26	; 0x02
    1814:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1816:	fe 01       	movw	r30, r28
    1818:	e1 55       	subi	r30, 0x51	; 81
    181a:	ff 4f       	sbci	r31, 0xFF	; 255
    181c:	60 81       	ld	r22, Z
    181e:	71 81       	ldd	r23, Z+1	; 0x01
    1820:	82 81       	ldd	r24, Z+2	; 0x02
    1822:	93 81       	ldd	r25, Z+3	; 0x03
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	30 e0       	ldi	r19, 0x00	; 0
    1828:	40 e8       	ldi	r20, 0x80	; 128
    182a:	5f e3       	ldi	r21, 0x3F	; 63
    182c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1830:	88 23       	and	r24, r24
    1832:	44 f4       	brge	.+16     	; 0x1844 <appMain+0x4de>
		__ticks = 1;
    1834:	fe 01       	movw	r30, r28
    1836:	e3 55       	subi	r30, 0x53	; 83
    1838:	ff 4f       	sbci	r31, 0xFF	; 255
    183a:	81 e0       	ldi	r24, 0x01	; 1
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	91 83       	std	Z+1, r25	; 0x01
    1840:	80 83       	st	Z, r24
    1842:	64 c0       	rjmp	.+200    	; 0x190c <appMain+0x5a6>
	else if (__tmp > 65535)
    1844:	fe 01       	movw	r30, r28
    1846:	e1 55       	subi	r30, 0x51	; 81
    1848:	ff 4f       	sbci	r31, 0xFF	; 255
    184a:	60 81       	ld	r22, Z
    184c:	71 81       	ldd	r23, Z+1	; 0x01
    184e:	82 81       	ldd	r24, Z+2	; 0x02
    1850:	93 81       	ldd	r25, Z+3	; 0x03
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	3f ef       	ldi	r19, 0xFF	; 255
    1856:	4f e7       	ldi	r20, 0x7F	; 127
    1858:	57 e4       	ldi	r21, 0x47	; 71
    185a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    185e:	18 16       	cp	r1, r24
    1860:	0c f0       	brlt	.+2      	; 0x1864 <appMain+0x4fe>
    1862:	43 c0       	rjmp	.+134    	; 0x18ea <appMain+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1864:	fe 01       	movw	r30, r28
    1866:	ed 54       	subi	r30, 0x4D	; 77
    1868:	ff 4f       	sbci	r31, 0xFF	; 255
    186a:	60 81       	ld	r22, Z
    186c:	71 81       	ldd	r23, Z+1	; 0x01
    186e:	82 81       	ldd	r24, Z+2	; 0x02
    1870:	93 81       	ldd	r25, Z+3	; 0x03
    1872:	20 e0       	ldi	r18, 0x00	; 0
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	40 e2       	ldi	r20, 0x20	; 32
    1878:	51 e4       	ldi	r21, 0x41	; 65
    187a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    187e:	dc 01       	movw	r26, r24
    1880:	cb 01       	movw	r24, r22
    1882:	8e 01       	movw	r16, r28
    1884:	03 55       	subi	r16, 0x53	; 83
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	bc 01       	movw	r22, r24
    188a:	cd 01       	movw	r24, r26
    188c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	f8 01       	movw	r30, r16
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
    189a:	1f c0       	rjmp	.+62     	; 0x18da <appMain+0x574>
    189c:	fe 01       	movw	r30, r28
    189e:	e5 55       	subi	r30, 0x55	; 85
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	88 ec       	ldi	r24, 0xC8	; 200
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	91 83       	std	Z+1, r25	; 0x01
    18a8:	80 83       	st	Z, r24
    18aa:	fe 01       	movw	r30, r28
    18ac:	e5 55       	subi	r30, 0x55	; 85
    18ae:	ff 4f       	sbci	r31, 0xFF	; 255
    18b0:	80 81       	ld	r24, Z
    18b2:	91 81       	ldd	r25, Z+1	; 0x01
    18b4:	01 97       	sbiw	r24, 0x01	; 1
    18b6:	f1 f7       	brne	.-4      	; 0x18b4 <appMain+0x54e>
    18b8:	fe 01       	movw	r30, r28
    18ba:	e5 55       	subi	r30, 0x55	; 85
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	91 83       	std	Z+1, r25	; 0x01
    18c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18c2:	de 01       	movw	r26, r28
    18c4:	a3 55       	subi	r26, 0x53	; 83
    18c6:	bf 4f       	sbci	r27, 0xFF	; 255
    18c8:	fe 01       	movw	r30, r28
    18ca:	e3 55       	subi	r30, 0x53	; 83
    18cc:	ff 4f       	sbci	r31, 0xFF	; 255
    18ce:	80 81       	ld	r24, Z
    18d0:	91 81       	ldd	r25, Z+1	; 0x01
    18d2:	01 97       	sbiw	r24, 0x01	; 1
    18d4:	11 96       	adiw	r26, 0x01	; 1
    18d6:	9c 93       	st	X, r25
    18d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	fe 01       	movw	r30, r28
    18dc:	e3 55       	subi	r30, 0x53	; 83
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	80 81       	ld	r24, Z
    18e2:	91 81       	ldd	r25, Z+1	; 0x01
    18e4:	00 97       	sbiw	r24, 0x00	; 0
    18e6:	d1 f6       	brne	.-76     	; 0x189c <appMain+0x536>
    18e8:	27 c0       	rjmp	.+78     	; 0x1938 <appMain+0x5d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ea:	8e 01       	movw	r16, r28
    18ec:	03 55       	subi	r16, 0x53	; 83
    18ee:	1f 4f       	sbci	r17, 0xFF	; 255
    18f0:	fe 01       	movw	r30, r28
    18f2:	e1 55       	subi	r30, 0x51	; 81
    18f4:	ff 4f       	sbci	r31, 0xFF	; 255
    18f6:	60 81       	ld	r22, Z
    18f8:	71 81       	ldd	r23, Z+1	; 0x01
    18fa:	82 81       	ldd	r24, Z+2	; 0x02
    18fc:	93 81       	ldd	r25, Z+3	; 0x03
    18fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1902:	dc 01       	movw	r26, r24
    1904:	cb 01       	movw	r24, r22
    1906:	f8 01       	movw	r30, r16
    1908:	91 83       	std	Z+1, r25	; 0x01
    190a:	80 83       	st	Z, r24
    190c:	de 01       	movw	r26, r28
    190e:	a7 55       	subi	r26, 0x57	; 87
    1910:	bf 4f       	sbci	r27, 0xFF	; 255
    1912:	fe 01       	movw	r30, r28
    1914:	e3 55       	subi	r30, 0x53	; 83
    1916:	ff 4f       	sbci	r31, 0xFF	; 255
    1918:	80 81       	ld	r24, Z
    191a:	91 81       	ldd	r25, Z+1	; 0x01
    191c:	8d 93       	st	X+, r24
    191e:	9c 93       	st	X, r25
    1920:	fe 01       	movw	r30, r28
    1922:	e7 55       	subi	r30, 0x57	; 87
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	80 81       	ld	r24, Z
    1928:	91 81       	ldd	r25, Z+1	; 0x01
    192a:	01 97       	sbiw	r24, 0x01	; 1
    192c:	f1 f7       	brne	.-4      	; 0x192a <appMain+0x5c4>
    192e:	fe 01       	movw	r30, r28
    1930:	e7 55       	subi	r30, 0x57	; 87
    1932:	ff 4f       	sbci	r31, 0xFF	; 255
    1934:	91 83       	std	Z+1, r25	; 0x01
    1936:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA4Led);
    1938:	89 e8       	ldi	r24, 0x89	; 137
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1940:	fe 01       	movw	r30, r28
    1942:	eb 55       	subi	r30, 0x5B	; 91
    1944:	ff 4f       	sbci	r31, 0xFF	; 255
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	aa e7       	ldi	r26, 0x7A	; 122
    194c:	b3 e4       	ldi	r27, 0x43	; 67
    194e:	80 83       	st	Z, r24
    1950:	91 83       	std	Z+1, r25	; 0x01
    1952:	a2 83       	std	Z+2, r26	; 0x02
    1954:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1956:	8e 01       	movw	r16, r28
    1958:	0f 55       	subi	r16, 0x5F	; 95
    195a:	1f 4f       	sbci	r17, 0xFF	; 255
    195c:	fe 01       	movw	r30, r28
    195e:	eb 55       	subi	r30, 0x5B	; 91
    1960:	ff 4f       	sbci	r31, 0xFF	; 255
    1962:	60 81       	ld	r22, Z
    1964:	71 81       	ldd	r23, Z+1	; 0x01
    1966:	82 81       	ldd	r24, Z+2	; 0x02
    1968:	93 81       	ldd	r25, Z+3	; 0x03
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	4a ef       	ldi	r20, 0xFA	; 250
    1970:	54 e4       	ldi	r21, 0x44	; 68
    1972:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1976:	dc 01       	movw	r26, r24
    1978:	cb 01       	movw	r24, r22
    197a:	f8 01       	movw	r30, r16
    197c:	80 83       	st	Z, r24
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	a2 83       	std	Z+2, r26	; 0x02
    1982:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1984:	fe 01       	movw	r30, r28
    1986:	ef 55       	subi	r30, 0x5F	; 95
    1988:	ff 4f       	sbci	r31, 0xFF	; 255
    198a:	60 81       	ld	r22, Z
    198c:	71 81       	ldd	r23, Z+1	; 0x01
    198e:	82 81       	ldd	r24, Z+2	; 0x02
    1990:	93 81       	ldd	r25, Z+3	; 0x03
    1992:	20 e0       	ldi	r18, 0x00	; 0
    1994:	30 e0       	ldi	r19, 0x00	; 0
    1996:	40 e8       	ldi	r20, 0x80	; 128
    1998:	5f e3       	ldi	r21, 0x3F	; 63
    199a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    199e:	88 23       	and	r24, r24
    19a0:	44 f4       	brge	.+16     	; 0x19b2 <appMain+0x64c>
		__ticks = 1;
    19a2:	fe 01       	movw	r30, r28
    19a4:	e1 56       	subi	r30, 0x61	; 97
    19a6:	ff 4f       	sbci	r31, 0xFF	; 255
    19a8:	81 e0       	ldi	r24, 0x01	; 1
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	91 83       	std	Z+1, r25	; 0x01
    19ae:	80 83       	st	Z, r24
    19b0:	64 c0       	rjmp	.+200    	; 0x1a7a <appMain+0x714>
	else if (__tmp > 65535)
    19b2:	fe 01       	movw	r30, r28
    19b4:	ef 55       	subi	r30, 0x5F	; 95
    19b6:	ff 4f       	sbci	r31, 0xFF	; 255
    19b8:	60 81       	ld	r22, Z
    19ba:	71 81       	ldd	r23, Z+1	; 0x01
    19bc:	82 81       	ldd	r24, Z+2	; 0x02
    19be:	93 81       	ldd	r25, Z+3	; 0x03
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	3f ef       	ldi	r19, 0xFF	; 255
    19c4:	4f e7       	ldi	r20, 0x7F	; 127
    19c6:	57 e4       	ldi	r21, 0x47	; 71
    19c8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    19cc:	18 16       	cp	r1, r24
    19ce:	0c f0       	brlt	.+2      	; 0x19d2 <appMain+0x66c>
    19d0:	43 c0       	rjmp	.+134    	; 0x1a58 <appMain+0x6f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19d2:	fe 01       	movw	r30, r28
    19d4:	eb 55       	subi	r30, 0x5B	; 91
    19d6:	ff 4f       	sbci	r31, 0xFF	; 255
    19d8:	60 81       	ld	r22, Z
    19da:	71 81       	ldd	r23, Z+1	; 0x01
    19dc:	82 81       	ldd	r24, Z+2	; 0x02
    19de:	93 81       	ldd	r25, Z+3	; 0x03
    19e0:	20 e0       	ldi	r18, 0x00	; 0
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	40 e2       	ldi	r20, 0x20	; 32
    19e6:	51 e4       	ldi	r21, 0x41	; 65
    19e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19ec:	dc 01       	movw	r26, r24
    19ee:	cb 01       	movw	r24, r22
    19f0:	8e 01       	movw	r16, r28
    19f2:	01 56       	subi	r16, 0x61	; 97
    19f4:	1f 4f       	sbci	r17, 0xFF	; 255
    19f6:	bc 01       	movw	r22, r24
    19f8:	cd 01       	movw	r24, r26
    19fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19fe:	dc 01       	movw	r26, r24
    1a00:	cb 01       	movw	r24, r22
    1a02:	f8 01       	movw	r30, r16
    1a04:	91 83       	std	Z+1, r25	; 0x01
    1a06:	80 83       	st	Z, r24
    1a08:	1f c0       	rjmp	.+62     	; 0x1a48 <appMain+0x6e2>
    1a0a:	fe 01       	movw	r30, r28
    1a0c:	e3 56       	subi	r30, 0x63	; 99
    1a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a10:	88 ec       	ldi	r24, 0xC8	; 200
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	91 83       	std	Z+1, r25	; 0x01
    1a16:	80 83       	st	Z, r24
    1a18:	fe 01       	movw	r30, r28
    1a1a:	e3 56       	subi	r30, 0x63	; 99
    1a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1e:	80 81       	ld	r24, Z
    1a20:	91 81       	ldd	r25, Z+1	; 0x01
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <appMain+0x6bc>
    1a26:	fe 01       	movw	r30, r28
    1a28:	e3 56       	subi	r30, 0x63	; 99
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	91 83       	std	Z+1, r25	; 0x01
    1a2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a30:	de 01       	movw	r26, r28
    1a32:	a1 56       	subi	r26, 0x61	; 97
    1a34:	bf 4f       	sbci	r27, 0xFF	; 255
    1a36:	fe 01       	movw	r30, r28
    1a38:	e1 56       	subi	r30, 0x61	; 97
    1a3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3c:	80 81       	ld	r24, Z
    1a3e:	91 81       	ldd	r25, Z+1	; 0x01
    1a40:	01 97       	sbiw	r24, 0x01	; 1
    1a42:	11 96       	adiw	r26, 0x01	; 1
    1a44:	9c 93       	st	X, r25
    1a46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a48:	fe 01       	movw	r30, r28
    1a4a:	e1 56       	subi	r30, 0x61	; 97
    1a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4e:	80 81       	ld	r24, Z
    1a50:	91 81       	ldd	r25, Z+1	; 0x01
    1a52:	00 97       	sbiw	r24, 0x00	; 0
    1a54:	d1 f6       	brne	.-76     	; 0x1a0a <appMain+0x6a4>
    1a56:	27 c0       	rjmp	.+78     	; 0x1aa6 <appMain+0x740>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a58:	8e 01       	movw	r16, r28
    1a5a:	01 56       	subi	r16, 0x61	; 97
    1a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5e:	fe 01       	movw	r30, r28
    1a60:	ef 55       	subi	r30, 0x5F	; 95
    1a62:	ff 4f       	sbci	r31, 0xFF	; 255
    1a64:	60 81       	ld	r22, Z
    1a66:	71 81       	ldd	r23, Z+1	; 0x01
    1a68:	82 81       	ldd	r24, Z+2	; 0x02
    1a6a:	93 81       	ldd	r25, Z+3	; 0x03
    1a6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a70:	dc 01       	movw	r26, r24
    1a72:	cb 01       	movw	r24, r22
    1a74:	f8 01       	movw	r30, r16
    1a76:	91 83       	std	Z+1, r25	; 0x01
    1a78:	80 83       	st	Z, r24
    1a7a:	de 01       	movw	r26, r28
    1a7c:	a5 56       	subi	r26, 0x65	; 101
    1a7e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a80:	fe 01       	movw	r30, r28
    1a82:	e1 56       	subi	r30, 0x61	; 97
    1a84:	ff 4f       	sbci	r31, 0xFF	; 255
    1a86:	80 81       	ld	r24, Z
    1a88:	91 81       	ldd	r25, Z+1	; 0x01
    1a8a:	8d 93       	st	X+, r24
    1a8c:	9c 93       	st	X, r25
    1a8e:	fe 01       	movw	r30, r28
    1a90:	e5 56       	subi	r30, 0x65	; 101
    1a92:	ff 4f       	sbci	r31, 0xFF	; 255
    1a94:	80 81       	ld	r24, Z
    1a96:	91 81       	ldd	r25, Z+1	; 0x01
    1a98:	01 97       	sbiw	r24, 0x01	; 1
    1a9a:	f1 f7       	brne	.-4      	; 0x1a98 <appMain+0x732>
    1a9c:	fe 01       	movw	r30, r28
    1a9e:	e5 56       	subi	r30, 0x65	; 101
    1aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa2:	91 83       	std	Z+1, r25	; 0x01
    1aa4:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA5Led);
    1aa6:	8c e8       	ldi	r24, 0x8C	; 140
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1aae:	fe 01       	movw	r30, r28
    1ab0:	e9 56       	subi	r30, 0x69	; 105
    1ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab4:	80 e0       	ldi	r24, 0x00	; 0
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	aa e7       	ldi	r26, 0x7A	; 122
    1aba:	b3 e4       	ldi	r27, 0x43	; 67
    1abc:	80 83       	st	Z, r24
    1abe:	91 83       	std	Z+1, r25	; 0x01
    1ac0:	a2 83       	std	Z+2, r26	; 0x02
    1ac2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ac4:	8e 01       	movw	r16, r28
    1ac6:	0d 56       	subi	r16, 0x6D	; 109
    1ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aca:	fe 01       	movw	r30, r28
    1acc:	e9 56       	subi	r30, 0x69	; 105
    1ace:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad0:	60 81       	ld	r22, Z
    1ad2:	71 81       	ldd	r23, Z+1	; 0x01
    1ad4:	82 81       	ldd	r24, Z+2	; 0x02
    1ad6:	93 81       	ldd	r25, Z+3	; 0x03
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	4a ef       	ldi	r20, 0xFA	; 250
    1ade:	54 e4       	ldi	r21, 0x44	; 68
    1ae0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ae4:	dc 01       	movw	r26, r24
    1ae6:	cb 01       	movw	r24, r22
    1ae8:	f8 01       	movw	r30, r16
    1aea:	80 83       	st	Z, r24
    1aec:	91 83       	std	Z+1, r25	; 0x01
    1aee:	a2 83       	std	Z+2, r26	; 0x02
    1af0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1af2:	fe 01       	movw	r30, r28
    1af4:	ed 56       	subi	r30, 0x6D	; 109
    1af6:	ff 4f       	sbci	r31, 0xFF	; 255
    1af8:	60 81       	ld	r22, Z
    1afa:	71 81       	ldd	r23, Z+1	; 0x01
    1afc:	82 81       	ldd	r24, Z+2	; 0x02
    1afe:	93 81       	ldd	r25, Z+3	; 0x03
    1b00:	20 e0       	ldi	r18, 0x00	; 0
    1b02:	30 e0       	ldi	r19, 0x00	; 0
    1b04:	40 e8       	ldi	r20, 0x80	; 128
    1b06:	5f e3       	ldi	r21, 0x3F	; 63
    1b08:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b0c:	88 23       	and	r24, r24
    1b0e:	44 f4       	brge	.+16     	; 0x1b20 <appMain+0x7ba>
		__ticks = 1;
    1b10:	fe 01       	movw	r30, r28
    1b12:	ef 56       	subi	r30, 0x6F	; 111
    1b14:	ff 4f       	sbci	r31, 0xFF	; 255
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	80 83       	st	Z, r24
    1b1e:	64 c0       	rjmp	.+200    	; 0x1be8 <appMain+0x882>
	else if (__tmp > 65535)
    1b20:	fe 01       	movw	r30, r28
    1b22:	ed 56       	subi	r30, 0x6D	; 109
    1b24:	ff 4f       	sbci	r31, 0xFF	; 255
    1b26:	60 81       	ld	r22, Z
    1b28:	71 81       	ldd	r23, Z+1	; 0x01
    1b2a:	82 81       	ldd	r24, Z+2	; 0x02
    1b2c:	93 81       	ldd	r25, Z+3	; 0x03
    1b2e:	20 e0       	ldi	r18, 0x00	; 0
    1b30:	3f ef       	ldi	r19, 0xFF	; 255
    1b32:	4f e7       	ldi	r20, 0x7F	; 127
    1b34:	57 e4       	ldi	r21, 0x47	; 71
    1b36:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b3a:	18 16       	cp	r1, r24
    1b3c:	0c f0       	brlt	.+2      	; 0x1b40 <appMain+0x7da>
    1b3e:	43 c0       	rjmp	.+134    	; 0x1bc6 <appMain+0x860>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b40:	fe 01       	movw	r30, r28
    1b42:	e9 56       	subi	r30, 0x69	; 105
    1b44:	ff 4f       	sbci	r31, 0xFF	; 255
    1b46:	60 81       	ld	r22, Z
    1b48:	71 81       	ldd	r23, Z+1	; 0x01
    1b4a:	82 81       	ldd	r24, Z+2	; 0x02
    1b4c:	93 81       	ldd	r25, Z+3	; 0x03
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	40 e2       	ldi	r20, 0x20	; 32
    1b54:	51 e4       	ldi	r21, 0x41	; 65
    1b56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	cb 01       	movw	r24, r22
    1b5e:	8e 01       	movw	r16, r28
    1b60:	0f 56       	subi	r16, 0x6F	; 111
    1b62:	1f 4f       	sbci	r17, 0xFF	; 255
    1b64:	bc 01       	movw	r22, r24
    1b66:	cd 01       	movw	r24, r26
    1b68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	cb 01       	movw	r24, r22
    1b70:	f8 01       	movw	r30, r16
    1b72:	91 83       	std	Z+1, r25	; 0x01
    1b74:	80 83       	st	Z, r24
    1b76:	1f c0       	rjmp	.+62     	; 0x1bb6 <appMain+0x850>
    1b78:	fe 01       	movw	r30, r28
    1b7a:	e1 57       	subi	r30, 0x71	; 113
    1b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7e:	88 ec       	ldi	r24, 0xC8	; 200
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	91 83       	std	Z+1, r25	; 0x01
    1b84:	80 83       	st	Z, r24
    1b86:	fe 01       	movw	r30, r28
    1b88:	e1 57       	subi	r30, 0x71	; 113
    1b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8c:	80 81       	ld	r24, Z
    1b8e:	91 81       	ldd	r25, Z+1	; 0x01
    1b90:	01 97       	sbiw	r24, 0x01	; 1
    1b92:	f1 f7       	brne	.-4      	; 0x1b90 <appMain+0x82a>
    1b94:	fe 01       	movw	r30, r28
    1b96:	e1 57       	subi	r30, 0x71	; 113
    1b98:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9a:	91 83       	std	Z+1, r25	; 0x01
    1b9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b9e:	de 01       	movw	r26, r28
    1ba0:	af 56       	subi	r26, 0x6F	; 111
    1ba2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	ef 56       	subi	r30, 0x6F	; 111
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	80 81       	ld	r24, Z
    1bac:	91 81       	ldd	r25, Z+1	; 0x01
    1bae:	01 97       	sbiw	r24, 0x01	; 1
    1bb0:	11 96       	adiw	r26, 0x01	; 1
    1bb2:	9c 93       	st	X, r25
    1bb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bb6:	fe 01       	movw	r30, r28
    1bb8:	ef 56       	subi	r30, 0x6F	; 111
    1bba:	ff 4f       	sbci	r31, 0xFF	; 255
    1bbc:	80 81       	ld	r24, Z
    1bbe:	91 81       	ldd	r25, Z+1	; 0x01
    1bc0:	00 97       	sbiw	r24, 0x00	; 0
    1bc2:	d1 f6       	brne	.-76     	; 0x1b78 <appMain+0x812>
    1bc4:	27 c0       	rjmp	.+78     	; 0x1c14 <appMain+0x8ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bc6:	8e 01       	movw	r16, r28
    1bc8:	0f 56       	subi	r16, 0x6F	; 111
    1bca:	1f 4f       	sbci	r17, 0xFF	; 255
    1bcc:	fe 01       	movw	r30, r28
    1bce:	ed 56       	subi	r30, 0x6D	; 109
    1bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd2:	60 81       	ld	r22, Z
    1bd4:	71 81       	ldd	r23, Z+1	; 0x01
    1bd6:	82 81       	ldd	r24, Z+2	; 0x02
    1bd8:	93 81       	ldd	r25, Z+3	; 0x03
    1bda:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bde:	dc 01       	movw	r26, r24
    1be0:	cb 01       	movw	r24, r22
    1be2:	f8 01       	movw	r30, r16
    1be4:	91 83       	std	Z+1, r25	; 0x01
    1be6:	80 83       	st	Z, r24
    1be8:	de 01       	movw	r26, r28
    1bea:	a3 57       	subi	r26, 0x73	; 115
    1bec:	bf 4f       	sbci	r27, 0xFF	; 255
    1bee:	fe 01       	movw	r30, r28
    1bf0:	ef 56       	subi	r30, 0x6F	; 111
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	80 81       	ld	r24, Z
    1bf6:	91 81       	ldd	r25, Z+1	; 0x01
    1bf8:	8d 93       	st	X+, r24
    1bfa:	9c 93       	st	X, r25
    1bfc:	fe 01       	movw	r30, r28
    1bfe:	e3 57       	subi	r30, 0x73	; 115
    1c00:	ff 4f       	sbci	r31, 0xFF	; 255
    1c02:	80 81       	ld	r24, Z
    1c04:	91 81       	ldd	r25, Z+1	; 0x01
    1c06:	01 97       	sbiw	r24, 0x01	; 1
    1c08:	f1 f7       	brne	.-4      	; 0x1c06 <appMain+0x8a0>
    1c0a:	fe 01       	movw	r30, r28
    1c0c:	e3 57       	subi	r30, 0x73	; 115
    1c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c10:	91 83       	std	Z+1, r25	; 0x01
    1c12:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA6Led);
    1c14:	8f e8       	ldi	r24, 0x8F	; 143
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1c1c:	fe 01       	movw	r30, r28
    1c1e:	e7 57       	subi	r30, 0x77	; 119
    1c20:	ff 4f       	sbci	r31, 0xFF	; 255
    1c22:	80 e0       	ldi	r24, 0x00	; 0
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	aa e7       	ldi	r26, 0x7A	; 122
    1c28:	b3 e4       	ldi	r27, 0x43	; 67
    1c2a:	80 83       	st	Z, r24
    1c2c:	91 83       	std	Z+1, r25	; 0x01
    1c2e:	a2 83       	std	Z+2, r26	; 0x02
    1c30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c32:	8e 01       	movw	r16, r28
    1c34:	0b 57       	subi	r16, 0x7B	; 123
    1c36:	1f 4f       	sbci	r17, 0xFF	; 255
    1c38:	fe 01       	movw	r30, r28
    1c3a:	e7 57       	subi	r30, 0x77	; 119
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	60 81       	ld	r22, Z
    1c40:	71 81       	ldd	r23, Z+1	; 0x01
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	20 e0       	ldi	r18, 0x00	; 0
    1c48:	30 e0       	ldi	r19, 0x00	; 0
    1c4a:	4a ef       	ldi	r20, 0xFA	; 250
    1c4c:	54 e4       	ldi	r21, 0x44	; 68
    1c4e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c52:	dc 01       	movw	r26, r24
    1c54:	cb 01       	movw	r24, r22
    1c56:	f8 01       	movw	r30, r16
    1c58:	80 83       	st	Z, r24
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	a2 83       	std	Z+2, r26	; 0x02
    1c5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c60:	fe 01       	movw	r30, r28
    1c62:	eb 57       	subi	r30, 0x7B	; 123
    1c64:	ff 4f       	sbci	r31, 0xFF	; 255
    1c66:	60 81       	ld	r22, Z
    1c68:	71 81       	ldd	r23, Z+1	; 0x01
    1c6a:	82 81       	ldd	r24, Z+2	; 0x02
    1c6c:	93 81       	ldd	r25, Z+3	; 0x03
    1c6e:	20 e0       	ldi	r18, 0x00	; 0
    1c70:	30 e0       	ldi	r19, 0x00	; 0
    1c72:	40 e8       	ldi	r20, 0x80	; 128
    1c74:	5f e3       	ldi	r21, 0x3F	; 63
    1c76:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c7a:	88 23       	and	r24, r24
    1c7c:	44 f4       	brge	.+16     	; 0x1c8e <appMain+0x928>
		__ticks = 1;
    1c7e:	fe 01       	movw	r30, r28
    1c80:	ed 57       	subi	r30, 0x7D	; 125
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	91 83       	std	Z+1, r25	; 0x01
    1c8a:	80 83       	st	Z, r24
    1c8c:	64 c0       	rjmp	.+200    	; 0x1d56 <appMain+0x9f0>
	else if (__tmp > 65535)
    1c8e:	fe 01       	movw	r30, r28
    1c90:	eb 57       	subi	r30, 0x7B	; 123
    1c92:	ff 4f       	sbci	r31, 0xFF	; 255
    1c94:	60 81       	ld	r22, Z
    1c96:	71 81       	ldd	r23, Z+1	; 0x01
    1c98:	82 81       	ldd	r24, Z+2	; 0x02
    1c9a:	93 81       	ldd	r25, Z+3	; 0x03
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	3f ef       	ldi	r19, 0xFF	; 255
    1ca0:	4f e7       	ldi	r20, 0x7F	; 127
    1ca2:	57 e4       	ldi	r21, 0x47	; 71
    1ca4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ca8:	18 16       	cp	r1, r24
    1caa:	0c f0       	brlt	.+2      	; 0x1cae <appMain+0x948>
    1cac:	43 c0       	rjmp	.+134    	; 0x1d34 <appMain+0x9ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cae:	fe 01       	movw	r30, r28
    1cb0:	e7 57       	subi	r30, 0x77	; 119
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	60 81       	ld	r22, Z
    1cb6:	71 81       	ldd	r23, Z+1	; 0x01
    1cb8:	82 81       	ldd	r24, Z+2	; 0x02
    1cba:	93 81       	ldd	r25, Z+3	; 0x03
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	40 e2       	ldi	r20, 0x20	; 32
    1cc2:	51 e4       	ldi	r21, 0x41	; 65
    1cc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cc8:	dc 01       	movw	r26, r24
    1cca:	cb 01       	movw	r24, r22
    1ccc:	8e 01       	movw	r16, r28
    1cce:	0d 57       	subi	r16, 0x7D	; 125
    1cd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd2:	bc 01       	movw	r22, r24
    1cd4:	cd 01       	movw	r24, r26
    1cd6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cda:	dc 01       	movw	r26, r24
    1cdc:	cb 01       	movw	r24, r22
    1cde:	f8 01       	movw	r30, r16
    1ce0:	91 83       	std	Z+1, r25	; 0x01
    1ce2:	80 83       	st	Z, r24
    1ce4:	1f c0       	rjmp	.+62     	; 0x1d24 <appMain+0x9be>
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	ef 57       	subi	r30, 0x7F	; 127
    1cea:	ff 4f       	sbci	r31, 0xFF	; 255
    1cec:	88 ec       	ldi	r24, 0xC8	; 200
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	91 83       	std	Z+1, r25	; 0x01
    1cf2:	80 83       	st	Z, r24
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	ef 57       	subi	r30, 0x7F	; 127
    1cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfa:	80 81       	ld	r24, Z
    1cfc:	91 81       	ldd	r25, Z+1	; 0x01
    1cfe:	01 97       	sbiw	r24, 0x01	; 1
    1d00:	f1 f7       	brne	.-4      	; 0x1cfe <appMain+0x998>
    1d02:	fe 01       	movw	r30, r28
    1d04:	ef 57       	subi	r30, 0x7F	; 127
    1d06:	ff 4f       	sbci	r31, 0xFF	; 255
    1d08:	91 83       	std	Z+1, r25	; 0x01
    1d0a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d0c:	de 01       	movw	r26, r28
    1d0e:	ad 57       	subi	r26, 0x7D	; 125
    1d10:	bf 4f       	sbci	r27, 0xFF	; 255
    1d12:	fe 01       	movw	r30, r28
    1d14:	ed 57       	subi	r30, 0x7D	; 125
    1d16:	ff 4f       	sbci	r31, 0xFF	; 255
    1d18:	80 81       	ld	r24, Z
    1d1a:	91 81       	ldd	r25, Z+1	; 0x01
    1d1c:	01 97       	sbiw	r24, 0x01	; 1
    1d1e:	11 96       	adiw	r26, 0x01	; 1
    1d20:	9c 93       	st	X, r25
    1d22:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d24:	fe 01       	movw	r30, r28
    1d26:	ed 57       	subi	r30, 0x7D	; 125
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	00 97       	sbiw	r24, 0x00	; 0
    1d30:	d1 f6       	brne	.-76     	; 0x1ce6 <appMain+0x980>
    1d32:	27 c0       	rjmp	.+78     	; 0x1d82 <appMain+0xa1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d34:	8e 01       	movw	r16, r28
    1d36:	0d 57       	subi	r16, 0x7D	; 125
    1d38:	1f 4f       	sbci	r17, 0xFF	; 255
    1d3a:	fe 01       	movw	r30, r28
    1d3c:	eb 57       	subi	r30, 0x7B	; 123
    1d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d40:	60 81       	ld	r22, Z
    1d42:	71 81       	ldd	r23, Z+1	; 0x01
    1d44:	82 81       	ldd	r24, Z+2	; 0x02
    1d46:	93 81       	ldd	r25, Z+3	; 0x03
    1d48:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d4c:	dc 01       	movw	r26, r24
    1d4e:	cb 01       	movw	r24, r22
    1d50:	f8 01       	movw	r30, r16
    1d52:	91 83       	std	Z+1, r25	; 0x01
    1d54:	80 83       	st	Z, r24
    1d56:	de 01       	movw	r26, r28
    1d58:	a1 58       	subi	r26, 0x81	; 129
    1d5a:	bf 4f       	sbci	r27, 0xFF	; 255
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	ed 57       	subi	r30, 0x7D	; 125
    1d60:	ff 4f       	sbci	r31, 0xFF	; 255
    1d62:	80 81       	ld	r24, Z
    1d64:	91 81       	ldd	r25, Z+1	; 0x01
    1d66:	8d 93       	st	X+, r24
    1d68:	9c 93       	st	X, r25
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	e1 58       	subi	r30, 0x81	; 129
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	80 81       	ld	r24, Z
    1d72:	91 81       	ldd	r25, Z+1	; 0x01
    1d74:	01 97       	sbiw	r24, 0x01	; 1
    1d76:	f1 f7       	brne	.-4      	; 0x1d74 <appMain+0xa0e>
    1d78:	fe 01       	movw	r30, r28
    1d7a:	e1 58       	subi	r30, 0x81	; 129
    1d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7e:	91 83       	std	Z+1, r25	; 0x01
    1d80:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOn(&pinA7Led);
    1d82:	82 e9       	ldi	r24, 0x92	; 146
    1d84:	90 e0       	ldi	r25, 0x00	; 0
    1d86:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <LED_turnOn>
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e5 58       	subi	r30, 0x85	; 133
    1d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d90:	80 e0       	ldi	r24, 0x00	; 0
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	aa e7       	ldi	r26, 0x7A	; 122
    1d96:	b3 e4       	ldi	r27, 0x43	; 67
    1d98:	80 83       	st	Z, r24
    1d9a:	91 83       	std	Z+1, r25	; 0x01
    1d9c:	a2 83       	std	Z+2, r26	; 0x02
    1d9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1da0:	8e 01       	movw	r16, r28
    1da2:	09 58       	subi	r16, 0x89	; 137
    1da4:	1f 4f       	sbci	r17, 0xFF	; 255
    1da6:	fe 01       	movw	r30, r28
    1da8:	e5 58       	subi	r30, 0x85	; 133
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	60 81       	ld	r22, Z
    1dae:	71 81       	ldd	r23, Z+1	; 0x01
    1db0:	82 81       	ldd	r24, Z+2	; 0x02
    1db2:	93 81       	ldd	r25, Z+3	; 0x03
    1db4:	20 e0       	ldi	r18, 0x00	; 0
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	4a ef       	ldi	r20, 0xFA	; 250
    1dba:	54 e4       	ldi	r21, 0x44	; 68
    1dbc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	f8 01       	movw	r30, r16
    1dc6:	80 83       	st	Z, r24
    1dc8:	91 83       	std	Z+1, r25	; 0x01
    1dca:	a2 83       	std	Z+2, r26	; 0x02
    1dcc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dce:	fe 01       	movw	r30, r28
    1dd0:	e9 58       	subi	r30, 0x89	; 137
    1dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd4:	60 81       	ld	r22, Z
    1dd6:	71 81       	ldd	r23, Z+1	; 0x01
    1dd8:	82 81       	ldd	r24, Z+2	; 0x02
    1dda:	93 81       	ldd	r25, Z+3	; 0x03
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	40 e8       	ldi	r20, 0x80	; 128
    1de2:	5f e3       	ldi	r21, 0x3F	; 63
    1de4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1de8:	88 23       	and	r24, r24
    1dea:	44 f4       	brge	.+16     	; 0x1dfc <appMain+0xa96>
		__ticks = 1;
    1dec:	fe 01       	movw	r30, r28
    1dee:	eb 58       	subi	r30, 0x8B	; 139
    1df0:	ff 4f       	sbci	r31, 0xFF	; 255
    1df2:	81 e0       	ldi	r24, 0x01	; 1
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	91 83       	std	Z+1, r25	; 0x01
    1df8:	80 83       	st	Z, r24
    1dfa:	64 c0       	rjmp	.+200    	; 0x1ec4 <appMain+0xb5e>
	else if (__tmp > 65535)
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e9 58       	subi	r30, 0x89	; 137
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	60 81       	ld	r22, Z
    1e04:	71 81       	ldd	r23, Z+1	; 0x01
    1e06:	82 81       	ldd	r24, Z+2	; 0x02
    1e08:	93 81       	ldd	r25, Z+3	; 0x03
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	3f ef       	ldi	r19, 0xFF	; 255
    1e0e:	4f e7       	ldi	r20, 0x7F	; 127
    1e10:	57 e4       	ldi	r21, 0x47	; 71
    1e12:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e16:	18 16       	cp	r1, r24
    1e18:	0c f0       	brlt	.+2      	; 0x1e1c <appMain+0xab6>
    1e1a:	43 c0       	rjmp	.+134    	; 0x1ea2 <appMain+0xb3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	e5 58       	subi	r30, 0x85	; 133
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	60 81       	ld	r22, Z
    1e24:	71 81       	ldd	r23, Z+1	; 0x01
    1e26:	82 81       	ldd	r24, Z+2	; 0x02
    1e28:	93 81       	ldd	r25, Z+3	; 0x03
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	40 e2       	ldi	r20, 0x20	; 32
    1e30:	51 e4       	ldi	r21, 0x41	; 65
    1e32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e36:	dc 01       	movw	r26, r24
    1e38:	cb 01       	movw	r24, r22
    1e3a:	8e 01       	movw	r16, r28
    1e3c:	0b 58       	subi	r16, 0x8B	; 139
    1e3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e40:	bc 01       	movw	r22, r24
    1e42:	cd 01       	movw	r24, r26
    1e44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e48:	dc 01       	movw	r26, r24
    1e4a:	cb 01       	movw	r24, r22
    1e4c:	f8 01       	movw	r30, r16
    1e4e:	91 83       	std	Z+1, r25	; 0x01
    1e50:	80 83       	st	Z, r24
    1e52:	1f c0       	rjmp	.+62     	; 0x1e92 <appMain+0xb2c>
    1e54:	fe 01       	movw	r30, r28
    1e56:	ed 58       	subi	r30, 0x8D	; 141
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	88 ec       	ldi	r24, 0xC8	; 200
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	80 83       	st	Z, r24
    1e62:	fe 01       	movw	r30, r28
    1e64:	ed 58       	subi	r30, 0x8D	; 141
    1e66:	ff 4f       	sbci	r31, 0xFF	; 255
    1e68:	80 81       	ld	r24, Z
    1e6a:	91 81       	ldd	r25, Z+1	; 0x01
    1e6c:	01 97       	sbiw	r24, 0x01	; 1
    1e6e:	f1 f7       	brne	.-4      	; 0x1e6c <appMain+0xb06>
    1e70:	fe 01       	movw	r30, r28
    1e72:	ed 58       	subi	r30, 0x8D	; 141
    1e74:	ff 4f       	sbci	r31, 0xFF	; 255
    1e76:	91 83       	std	Z+1, r25	; 0x01
    1e78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e7a:	de 01       	movw	r26, r28
    1e7c:	ab 58       	subi	r26, 0x8B	; 139
    1e7e:	bf 4f       	sbci	r27, 0xFF	; 255
    1e80:	fe 01       	movw	r30, r28
    1e82:	eb 58       	subi	r30, 0x8B	; 139
    1e84:	ff 4f       	sbci	r31, 0xFF	; 255
    1e86:	80 81       	ld	r24, Z
    1e88:	91 81       	ldd	r25, Z+1	; 0x01
    1e8a:	01 97       	sbiw	r24, 0x01	; 1
    1e8c:	11 96       	adiw	r26, 0x01	; 1
    1e8e:	9c 93       	st	X, r25
    1e90:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e92:	fe 01       	movw	r30, r28
    1e94:	eb 58       	subi	r30, 0x8B	; 139
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	80 81       	ld	r24, Z
    1e9a:	91 81       	ldd	r25, Z+1	; 0x01
    1e9c:	00 97       	sbiw	r24, 0x00	; 0
    1e9e:	d1 f6       	brne	.-76     	; 0x1e54 <appMain+0xaee>
    1ea0:	27 c0       	rjmp	.+78     	; 0x1ef0 <appMain+0xb8a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ea2:	8e 01       	movw	r16, r28
    1ea4:	0b 58       	subi	r16, 0x8B	; 139
    1ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea8:	fe 01       	movw	r30, r28
    1eaa:	e9 58       	subi	r30, 0x89	; 137
    1eac:	ff 4f       	sbci	r31, 0xFF	; 255
    1eae:	60 81       	ld	r22, Z
    1eb0:	71 81       	ldd	r23, Z+1	; 0x01
    1eb2:	82 81       	ldd	r24, Z+2	; 0x02
    1eb4:	93 81       	ldd	r25, Z+3	; 0x03
    1eb6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1eba:	dc 01       	movw	r26, r24
    1ebc:	cb 01       	movw	r24, r22
    1ebe:	f8 01       	movw	r30, r16
    1ec0:	91 83       	std	Z+1, r25	; 0x01
    1ec2:	80 83       	st	Z, r24
    1ec4:	de 01       	movw	r26, r28
    1ec6:	af 58       	subi	r26, 0x8F	; 143
    1ec8:	bf 4f       	sbci	r27, 0xFF	; 255
    1eca:	fe 01       	movw	r30, r28
    1ecc:	eb 58       	subi	r30, 0x8B	; 139
    1ece:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed0:	80 81       	ld	r24, Z
    1ed2:	91 81       	ldd	r25, Z+1	; 0x01
    1ed4:	8d 93       	st	X+, r24
    1ed6:	9c 93       	st	X, r25
    1ed8:	fe 01       	movw	r30, r28
    1eda:	ef 58       	subi	r30, 0x8F	; 143
    1edc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ede:	80 81       	ld	r24, Z
    1ee0:	91 81       	ldd	r25, Z+1	; 0x01
    1ee2:	01 97       	sbiw	r24, 0x01	; 1
    1ee4:	f1 f7       	brne	.-4      	; 0x1ee2 <appMain+0xb7c>
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	ef 58       	subi	r30, 0x8F	; 143
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	91 83       	std	Z+1, r25	; 0x01
    1eee:	80 83       	st	Z, r24
  _delay_ms(250);
  LED_turnOff(&pinA7Led);
    1ef0:	82 e9       	ldi	r24, 0x92	; 146
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    1ef8:	fe 01       	movw	r30, r28
    1efa:	e3 59       	subi	r30, 0x93	; 147
    1efc:	ff 4f       	sbci	r31, 0xFF	; 255
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	a8 ec       	ldi	r26, 0xC8	; 200
    1f04:	b2 e4       	ldi	r27, 0x42	; 66
    1f06:	80 83       	st	Z, r24
    1f08:	91 83       	std	Z+1, r25	; 0x01
    1f0a:	a2 83       	std	Z+2, r26	; 0x02
    1f0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f0e:	8e 01       	movw	r16, r28
    1f10:	07 59       	subi	r16, 0x97	; 151
    1f12:	1f 4f       	sbci	r17, 0xFF	; 255
    1f14:	fe 01       	movw	r30, r28
    1f16:	e3 59       	subi	r30, 0x93	; 147
    1f18:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1a:	60 81       	ld	r22, Z
    1f1c:	71 81       	ldd	r23, Z+1	; 0x01
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	4a ef       	ldi	r20, 0xFA	; 250
    1f28:	54 e4       	ldi	r21, 0x44	; 68
    1f2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f2e:	dc 01       	movw	r26, r24
    1f30:	cb 01       	movw	r24, r22
    1f32:	f8 01       	movw	r30, r16
    1f34:	80 83       	st	Z, r24
    1f36:	91 83       	std	Z+1, r25	; 0x01
    1f38:	a2 83       	std	Z+2, r26	; 0x02
    1f3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	e7 59       	subi	r30, 0x97	; 151
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	60 81       	ld	r22, Z
    1f44:	71 81       	ldd	r23, Z+1	; 0x01
    1f46:	82 81       	ldd	r24, Z+2	; 0x02
    1f48:	93 81       	ldd	r25, Z+3	; 0x03
    1f4a:	20 e0       	ldi	r18, 0x00	; 0
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	40 e8       	ldi	r20, 0x80	; 128
    1f50:	5f e3       	ldi	r21, 0x3F	; 63
    1f52:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f56:	88 23       	and	r24, r24
    1f58:	44 f4       	brge	.+16     	; 0x1f6a <appMain+0xc04>
		__ticks = 1;
    1f5a:	fe 01       	movw	r30, r28
    1f5c:	e9 59       	subi	r30, 0x99	; 153
    1f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	91 83       	std	Z+1, r25	; 0x01
    1f66:	80 83       	st	Z, r24
    1f68:	64 c0       	rjmp	.+200    	; 0x2032 <appMain+0xccc>
	else if (__tmp > 65535)
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	e7 59       	subi	r30, 0x97	; 151
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	60 81       	ld	r22, Z
    1f72:	71 81       	ldd	r23, Z+1	; 0x01
    1f74:	82 81       	ldd	r24, Z+2	; 0x02
    1f76:	93 81       	ldd	r25, Z+3	; 0x03
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	3f ef       	ldi	r19, 0xFF	; 255
    1f7c:	4f e7       	ldi	r20, 0x7F	; 127
    1f7e:	57 e4       	ldi	r21, 0x47	; 71
    1f80:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f84:	18 16       	cp	r1, r24
    1f86:	0c f0       	brlt	.+2      	; 0x1f8a <appMain+0xc24>
    1f88:	43 c0       	rjmp	.+134    	; 0x2010 <appMain+0xcaa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	e3 59       	subi	r30, 0x93	; 147
    1f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	20 e0       	ldi	r18, 0x00	; 0
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	40 e2       	ldi	r20, 0x20	; 32
    1f9e:	51 e4       	ldi	r21, 0x41	; 65
    1fa0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	8e 01       	movw	r16, r28
    1faa:	09 59       	subi	r16, 0x99	; 153
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	bc 01       	movw	r22, r24
    1fb0:	cd 01       	movw	r24, r26
    1fb2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fb6:	dc 01       	movw	r26, r24
    1fb8:	cb 01       	movw	r24, r22
    1fba:	f8 01       	movw	r30, r16
    1fbc:	91 83       	std	Z+1, r25	; 0x01
    1fbe:	80 83       	st	Z, r24
    1fc0:	1f c0       	rjmp	.+62     	; 0x2000 <appMain+0xc9a>
    1fc2:	fe 01       	movw	r30, r28
    1fc4:	eb 59       	subi	r30, 0x9B	; 155
    1fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc8:	88 ec       	ldi	r24, 0xC8	; 200
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	91 83       	std	Z+1, r25	; 0x01
    1fce:	80 83       	st	Z, r24
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	eb 59       	subi	r30, 0x9B	; 155
    1fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd6:	80 81       	ld	r24, Z
    1fd8:	91 81       	ldd	r25, Z+1	; 0x01
    1fda:	01 97       	sbiw	r24, 0x01	; 1
    1fdc:	f1 f7       	brne	.-4      	; 0x1fda <appMain+0xc74>
    1fde:	fe 01       	movw	r30, r28
    1fe0:	eb 59       	subi	r30, 0x9B	; 155
    1fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe4:	91 83       	std	Z+1, r25	; 0x01
    1fe6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fe8:	de 01       	movw	r26, r28
    1fea:	a9 59       	subi	r26, 0x99	; 153
    1fec:	bf 4f       	sbci	r27, 0xFF	; 255
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e9 59       	subi	r30, 0x99	; 153
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	80 81       	ld	r24, Z
    1ff6:	91 81       	ldd	r25, Z+1	; 0x01
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	11 96       	adiw	r26, 0x01	; 1
    1ffc:	9c 93       	st	X, r25
    1ffe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2000:	fe 01       	movw	r30, r28
    2002:	e9 59       	subi	r30, 0x99	; 153
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	80 81       	ld	r24, Z
    2008:	91 81       	ldd	r25, Z+1	; 0x01
    200a:	00 97       	sbiw	r24, 0x00	; 0
    200c:	d1 f6       	brne	.-76     	; 0x1fc2 <appMain+0xc5c>
    200e:	27 c0       	rjmp	.+78     	; 0x205e <appMain+0xcf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2010:	8e 01       	movw	r16, r28
    2012:	09 59       	subi	r16, 0x99	; 153
    2014:	1f 4f       	sbci	r17, 0xFF	; 255
    2016:	fe 01       	movw	r30, r28
    2018:	e7 59       	subi	r30, 0x97	; 151
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	60 81       	ld	r22, Z
    201e:	71 81       	ldd	r23, Z+1	; 0x01
    2020:	82 81       	ldd	r24, Z+2	; 0x02
    2022:	93 81       	ldd	r25, Z+3	; 0x03
    2024:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2028:	dc 01       	movw	r26, r24
    202a:	cb 01       	movw	r24, r22
    202c:	f8 01       	movw	r30, r16
    202e:	91 83       	std	Z+1, r25	; 0x01
    2030:	80 83       	st	Z, r24
    2032:	de 01       	movw	r26, r28
    2034:	ad 59       	subi	r26, 0x9D	; 157
    2036:	bf 4f       	sbci	r27, 0xFF	; 255
    2038:	fe 01       	movw	r30, r28
    203a:	e9 59       	subi	r30, 0x99	; 153
    203c:	ff 4f       	sbci	r31, 0xFF	; 255
    203e:	80 81       	ld	r24, Z
    2040:	91 81       	ldd	r25, Z+1	; 0x01
    2042:	8d 93       	st	X+, r24
    2044:	9c 93       	st	X, r25
    2046:	fe 01       	movw	r30, r28
    2048:	ed 59       	subi	r30, 0x9D	; 157
    204a:	ff 4f       	sbci	r31, 0xFF	; 255
    204c:	80 81       	ld	r24, Z
    204e:	91 81       	ldd	r25, Z+1	; 0x01
    2050:	01 97       	sbiw	r24, 0x01	; 1
    2052:	f1 f7       	brne	.-4      	; 0x2050 <appMain+0xcea>
    2054:	fe 01       	movw	r30, r28
    2056:	ed 59       	subi	r30, 0x9D	; 157
    2058:	ff 4f       	sbci	r31, 0xFF	; 255
    205a:	91 83       	std	Z+1, r25	; 0x01
    205c:	80 83       	st	Z, r24
  _delay_ms(100);
  LED_turnOff(&pinA6Led);
    205e:	8f e8       	ldi	r24, 0x8F	; 143
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    2066:	fe 01       	movw	r30, r28
    2068:	e1 5a       	subi	r30, 0xA1	; 161
    206a:	ff 4f       	sbci	r31, 0xFF	; 255
    206c:	80 e0       	ldi	r24, 0x00	; 0
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	a8 ec       	ldi	r26, 0xC8	; 200
    2072:	b2 e4       	ldi	r27, 0x42	; 66
    2074:	80 83       	st	Z, r24
    2076:	91 83       	std	Z+1, r25	; 0x01
    2078:	a2 83       	std	Z+2, r26	; 0x02
    207a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    207c:	8e 01       	movw	r16, r28
    207e:	05 5a       	subi	r16, 0xA5	; 165
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	fe 01       	movw	r30, r28
    2084:	e1 5a       	subi	r30, 0xA1	; 161
    2086:	ff 4f       	sbci	r31, 0xFF	; 255
    2088:	60 81       	ld	r22, Z
    208a:	71 81       	ldd	r23, Z+1	; 0x01
    208c:	82 81       	ldd	r24, Z+2	; 0x02
    208e:	93 81       	ldd	r25, Z+3	; 0x03
    2090:	20 e0       	ldi	r18, 0x00	; 0
    2092:	30 e0       	ldi	r19, 0x00	; 0
    2094:	4a ef       	ldi	r20, 0xFA	; 250
    2096:	54 e4       	ldi	r21, 0x44	; 68
    2098:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    209c:	dc 01       	movw	r26, r24
    209e:	cb 01       	movw	r24, r22
    20a0:	f8 01       	movw	r30, r16
    20a2:	80 83       	st	Z, r24
    20a4:	91 83       	std	Z+1, r25	; 0x01
    20a6:	a2 83       	std	Z+2, r26	; 0x02
    20a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20aa:	fe 01       	movw	r30, r28
    20ac:	e5 5a       	subi	r30, 0xA5	; 165
    20ae:	ff 4f       	sbci	r31, 0xFF	; 255
    20b0:	60 81       	ld	r22, Z
    20b2:	71 81       	ldd	r23, Z+1	; 0x01
    20b4:	82 81       	ldd	r24, Z+2	; 0x02
    20b6:	93 81       	ldd	r25, Z+3	; 0x03
    20b8:	20 e0       	ldi	r18, 0x00	; 0
    20ba:	30 e0       	ldi	r19, 0x00	; 0
    20bc:	40 e8       	ldi	r20, 0x80	; 128
    20be:	5f e3       	ldi	r21, 0x3F	; 63
    20c0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    20c4:	88 23       	and	r24, r24
    20c6:	44 f4       	brge	.+16     	; 0x20d8 <appMain+0xd72>
		__ticks = 1;
    20c8:	fe 01       	movw	r30, r28
    20ca:	e7 5a       	subi	r30, 0xA7	; 167
    20cc:	ff 4f       	sbci	r31, 0xFF	; 255
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	91 83       	std	Z+1, r25	; 0x01
    20d4:	80 83       	st	Z, r24
    20d6:	64 c0       	rjmp	.+200    	; 0x21a0 <appMain+0xe3a>
	else if (__tmp > 65535)
    20d8:	fe 01       	movw	r30, r28
    20da:	e5 5a       	subi	r30, 0xA5	; 165
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	60 81       	ld	r22, Z
    20e0:	71 81       	ldd	r23, Z+1	; 0x01
    20e2:	82 81       	ldd	r24, Z+2	; 0x02
    20e4:	93 81       	ldd	r25, Z+3	; 0x03
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	3f ef       	ldi	r19, 0xFF	; 255
    20ea:	4f e7       	ldi	r20, 0x7F	; 127
    20ec:	57 e4       	ldi	r21, 0x47	; 71
    20ee:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    20f2:	18 16       	cp	r1, r24
    20f4:	0c f0       	brlt	.+2      	; 0x20f8 <appMain+0xd92>
    20f6:	43 c0       	rjmp	.+134    	; 0x217e <appMain+0xe18>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20f8:	fe 01       	movw	r30, r28
    20fa:	e1 5a       	subi	r30, 0xA1	; 161
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	60 81       	ld	r22, Z
    2100:	71 81       	ldd	r23, Z+1	; 0x01
    2102:	82 81       	ldd	r24, Z+2	; 0x02
    2104:	93 81       	ldd	r25, Z+3	; 0x03
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	40 e2       	ldi	r20, 0x20	; 32
    210c:	51 e4       	ldi	r21, 0x41	; 65
    210e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2112:	dc 01       	movw	r26, r24
    2114:	cb 01       	movw	r24, r22
    2116:	8e 01       	movw	r16, r28
    2118:	07 5a       	subi	r16, 0xA7	; 167
    211a:	1f 4f       	sbci	r17, 0xFF	; 255
    211c:	bc 01       	movw	r22, r24
    211e:	cd 01       	movw	r24, r26
    2120:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2124:	dc 01       	movw	r26, r24
    2126:	cb 01       	movw	r24, r22
    2128:	f8 01       	movw	r30, r16
    212a:	91 83       	std	Z+1, r25	; 0x01
    212c:	80 83       	st	Z, r24
    212e:	1f c0       	rjmp	.+62     	; 0x216e <appMain+0xe08>
    2130:	fe 01       	movw	r30, r28
    2132:	e9 5a       	subi	r30, 0xA9	; 169
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	88 ec       	ldi	r24, 0xC8	; 200
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	91 83       	std	Z+1, r25	; 0x01
    213c:	80 83       	st	Z, r24
    213e:	fe 01       	movw	r30, r28
    2140:	e9 5a       	subi	r30, 0xA9	; 169
    2142:	ff 4f       	sbci	r31, 0xFF	; 255
    2144:	80 81       	ld	r24, Z
    2146:	91 81       	ldd	r25, Z+1	; 0x01
    2148:	01 97       	sbiw	r24, 0x01	; 1
    214a:	f1 f7       	brne	.-4      	; 0x2148 <appMain+0xde2>
    214c:	fe 01       	movw	r30, r28
    214e:	e9 5a       	subi	r30, 0xA9	; 169
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	91 83       	std	Z+1, r25	; 0x01
    2154:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2156:	de 01       	movw	r26, r28
    2158:	a7 5a       	subi	r26, 0xA7	; 167
    215a:	bf 4f       	sbci	r27, 0xFF	; 255
    215c:	fe 01       	movw	r30, r28
    215e:	e7 5a       	subi	r30, 0xA7	; 167
    2160:	ff 4f       	sbci	r31, 0xFF	; 255
    2162:	80 81       	ld	r24, Z
    2164:	91 81       	ldd	r25, Z+1	; 0x01
    2166:	01 97       	sbiw	r24, 0x01	; 1
    2168:	11 96       	adiw	r26, 0x01	; 1
    216a:	9c 93       	st	X, r25
    216c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    216e:	fe 01       	movw	r30, r28
    2170:	e7 5a       	subi	r30, 0xA7	; 167
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	80 81       	ld	r24, Z
    2176:	91 81       	ldd	r25, Z+1	; 0x01
    2178:	00 97       	sbiw	r24, 0x00	; 0
    217a:	d1 f6       	brne	.-76     	; 0x2130 <appMain+0xdca>
    217c:	27 c0       	rjmp	.+78     	; 0x21cc <appMain+0xe66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    217e:	8e 01       	movw	r16, r28
    2180:	07 5a       	subi	r16, 0xA7	; 167
    2182:	1f 4f       	sbci	r17, 0xFF	; 255
    2184:	fe 01       	movw	r30, r28
    2186:	e5 5a       	subi	r30, 0xA5	; 165
    2188:	ff 4f       	sbci	r31, 0xFF	; 255
    218a:	60 81       	ld	r22, Z
    218c:	71 81       	ldd	r23, Z+1	; 0x01
    218e:	82 81       	ldd	r24, Z+2	; 0x02
    2190:	93 81       	ldd	r25, Z+3	; 0x03
    2192:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2196:	dc 01       	movw	r26, r24
    2198:	cb 01       	movw	r24, r22
    219a:	f8 01       	movw	r30, r16
    219c:	91 83       	std	Z+1, r25	; 0x01
    219e:	80 83       	st	Z, r24
    21a0:	de 01       	movw	r26, r28
    21a2:	ab 5a       	subi	r26, 0xAB	; 171
    21a4:	bf 4f       	sbci	r27, 0xFF	; 255
    21a6:	fe 01       	movw	r30, r28
    21a8:	e7 5a       	subi	r30, 0xA7	; 167
    21aa:	ff 4f       	sbci	r31, 0xFF	; 255
    21ac:	80 81       	ld	r24, Z
    21ae:	91 81       	ldd	r25, Z+1	; 0x01
    21b0:	8d 93       	st	X+, r24
    21b2:	9c 93       	st	X, r25
    21b4:	fe 01       	movw	r30, r28
    21b6:	eb 5a       	subi	r30, 0xAB	; 171
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	80 81       	ld	r24, Z
    21bc:	91 81       	ldd	r25, Z+1	; 0x01
    21be:	01 97       	sbiw	r24, 0x01	; 1
    21c0:	f1 f7       	brne	.-4      	; 0x21be <appMain+0xe58>
    21c2:	fe 01       	movw	r30, r28
    21c4:	eb 5a       	subi	r30, 0xAB	; 171
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	91 83       	std	Z+1, r25	; 0x01
    21ca:	80 83       	st	Z, r24
  _delay_ms(100);
  LED_turnOff(&pinA5Led);
    21cc:	8c e8       	ldi	r24, 0x8C	; 140
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    21d4:	fe 01       	movw	r30, r28
    21d6:	ef 5a       	subi	r30, 0xAF	; 175
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	80 e0       	ldi	r24, 0x00	; 0
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	a8 ec       	ldi	r26, 0xC8	; 200
    21e0:	b2 e4       	ldi	r27, 0x42	; 66
    21e2:	80 83       	st	Z, r24
    21e4:	91 83       	std	Z+1, r25	; 0x01
    21e6:	a2 83       	std	Z+2, r26	; 0x02
    21e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ea:	8e 01       	movw	r16, r28
    21ec:	03 5b       	subi	r16, 0xB3	; 179
    21ee:	1f 4f       	sbci	r17, 0xFF	; 255
    21f0:	fe 01       	movw	r30, r28
    21f2:	ef 5a       	subi	r30, 0xAF	; 175
    21f4:	ff 4f       	sbci	r31, 0xFF	; 255
    21f6:	60 81       	ld	r22, Z
    21f8:	71 81       	ldd	r23, Z+1	; 0x01
    21fa:	82 81       	ldd	r24, Z+2	; 0x02
    21fc:	93 81       	ldd	r25, Z+3	; 0x03
    21fe:	20 e0       	ldi	r18, 0x00	; 0
    2200:	30 e0       	ldi	r19, 0x00	; 0
    2202:	4a ef       	ldi	r20, 0xFA	; 250
    2204:	54 e4       	ldi	r21, 0x44	; 68
    2206:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    220a:	dc 01       	movw	r26, r24
    220c:	cb 01       	movw	r24, r22
    220e:	f8 01       	movw	r30, r16
    2210:	80 83       	st	Z, r24
    2212:	91 83       	std	Z+1, r25	; 0x01
    2214:	a2 83       	std	Z+2, r26	; 0x02
    2216:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2218:	fe 01       	movw	r30, r28
    221a:	e3 5b       	subi	r30, 0xB3	; 179
    221c:	ff 4f       	sbci	r31, 0xFF	; 255
    221e:	60 81       	ld	r22, Z
    2220:	71 81       	ldd	r23, Z+1	; 0x01
    2222:	82 81       	ldd	r24, Z+2	; 0x02
    2224:	93 81       	ldd	r25, Z+3	; 0x03
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	40 e8       	ldi	r20, 0x80	; 128
    222c:	5f e3       	ldi	r21, 0x3F	; 63
    222e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2232:	88 23       	and	r24, r24
    2234:	44 f4       	brge	.+16     	; 0x2246 <appMain+0xee0>
		__ticks = 1;
    2236:	fe 01       	movw	r30, r28
    2238:	e5 5b       	subi	r30, 0xB5	; 181
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	81 e0       	ldi	r24, 0x01	; 1
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	91 83       	std	Z+1, r25	; 0x01
    2242:	80 83       	st	Z, r24
    2244:	64 c0       	rjmp	.+200    	; 0x230e <appMain+0xfa8>
	else if (__tmp > 65535)
    2246:	fe 01       	movw	r30, r28
    2248:	e3 5b       	subi	r30, 0xB3	; 179
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	60 81       	ld	r22, Z
    224e:	71 81       	ldd	r23, Z+1	; 0x01
    2250:	82 81       	ldd	r24, Z+2	; 0x02
    2252:	93 81       	ldd	r25, Z+3	; 0x03
    2254:	20 e0       	ldi	r18, 0x00	; 0
    2256:	3f ef       	ldi	r19, 0xFF	; 255
    2258:	4f e7       	ldi	r20, 0x7F	; 127
    225a:	57 e4       	ldi	r21, 0x47	; 71
    225c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2260:	18 16       	cp	r1, r24
    2262:	0c f0       	brlt	.+2      	; 0x2266 <appMain+0xf00>
    2264:	43 c0       	rjmp	.+134    	; 0x22ec <appMain+0xf86>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2266:	fe 01       	movw	r30, r28
    2268:	ef 5a       	subi	r30, 0xAF	; 175
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	60 81       	ld	r22, Z
    226e:	71 81       	ldd	r23, Z+1	; 0x01
    2270:	82 81       	ldd	r24, Z+2	; 0x02
    2272:	93 81       	ldd	r25, Z+3	; 0x03
    2274:	20 e0       	ldi	r18, 0x00	; 0
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	40 e2       	ldi	r20, 0x20	; 32
    227a:	51 e4       	ldi	r21, 0x41	; 65
    227c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2280:	dc 01       	movw	r26, r24
    2282:	cb 01       	movw	r24, r22
    2284:	8e 01       	movw	r16, r28
    2286:	05 5b       	subi	r16, 0xB5	; 181
    2288:	1f 4f       	sbci	r17, 0xFF	; 255
    228a:	bc 01       	movw	r22, r24
    228c:	cd 01       	movw	r24, r26
    228e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2292:	dc 01       	movw	r26, r24
    2294:	cb 01       	movw	r24, r22
    2296:	f8 01       	movw	r30, r16
    2298:	91 83       	std	Z+1, r25	; 0x01
    229a:	80 83       	st	Z, r24
    229c:	1f c0       	rjmp	.+62     	; 0x22dc <appMain+0xf76>
    229e:	fe 01       	movw	r30, r28
    22a0:	e7 5b       	subi	r30, 0xB7	; 183
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	88 ec       	ldi	r24, 0xC8	; 200
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	91 83       	std	Z+1, r25	; 0x01
    22aa:	80 83       	st	Z, r24
    22ac:	fe 01       	movw	r30, r28
    22ae:	e7 5b       	subi	r30, 0xB7	; 183
    22b0:	ff 4f       	sbci	r31, 0xFF	; 255
    22b2:	80 81       	ld	r24, Z
    22b4:	91 81       	ldd	r25, Z+1	; 0x01
    22b6:	01 97       	sbiw	r24, 0x01	; 1
    22b8:	f1 f7       	brne	.-4      	; 0x22b6 <appMain+0xf50>
    22ba:	fe 01       	movw	r30, r28
    22bc:	e7 5b       	subi	r30, 0xB7	; 183
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	91 83       	std	Z+1, r25	; 0x01
    22c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22c4:	de 01       	movw	r26, r28
    22c6:	a5 5b       	subi	r26, 0xB5	; 181
    22c8:	bf 4f       	sbci	r27, 0xFF	; 255
    22ca:	fe 01       	movw	r30, r28
    22cc:	e5 5b       	subi	r30, 0xB5	; 181
    22ce:	ff 4f       	sbci	r31, 0xFF	; 255
    22d0:	80 81       	ld	r24, Z
    22d2:	91 81       	ldd	r25, Z+1	; 0x01
    22d4:	01 97       	sbiw	r24, 0x01	; 1
    22d6:	11 96       	adiw	r26, 0x01	; 1
    22d8:	9c 93       	st	X, r25
    22da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22dc:	fe 01       	movw	r30, r28
    22de:	e5 5b       	subi	r30, 0xB5	; 181
    22e0:	ff 4f       	sbci	r31, 0xFF	; 255
    22e2:	80 81       	ld	r24, Z
    22e4:	91 81       	ldd	r25, Z+1	; 0x01
    22e6:	00 97       	sbiw	r24, 0x00	; 0
    22e8:	d1 f6       	brne	.-76     	; 0x229e <appMain+0xf38>
    22ea:	27 c0       	rjmp	.+78     	; 0x233a <appMain+0xfd4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ec:	8e 01       	movw	r16, r28
    22ee:	05 5b       	subi	r16, 0xB5	; 181
    22f0:	1f 4f       	sbci	r17, 0xFF	; 255
    22f2:	fe 01       	movw	r30, r28
    22f4:	e3 5b       	subi	r30, 0xB3	; 179
    22f6:	ff 4f       	sbci	r31, 0xFF	; 255
    22f8:	60 81       	ld	r22, Z
    22fa:	71 81       	ldd	r23, Z+1	; 0x01
    22fc:	82 81       	ldd	r24, Z+2	; 0x02
    22fe:	93 81       	ldd	r25, Z+3	; 0x03
    2300:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2304:	dc 01       	movw	r26, r24
    2306:	cb 01       	movw	r24, r22
    2308:	f8 01       	movw	r30, r16
    230a:	91 83       	std	Z+1, r25	; 0x01
    230c:	80 83       	st	Z, r24
    230e:	de 01       	movw	r26, r28
    2310:	a9 5b       	subi	r26, 0xB9	; 185
    2312:	bf 4f       	sbci	r27, 0xFF	; 255
    2314:	fe 01       	movw	r30, r28
    2316:	e5 5b       	subi	r30, 0xB5	; 181
    2318:	ff 4f       	sbci	r31, 0xFF	; 255
    231a:	80 81       	ld	r24, Z
    231c:	91 81       	ldd	r25, Z+1	; 0x01
    231e:	8d 93       	st	X+, r24
    2320:	9c 93       	st	X, r25
    2322:	fe 01       	movw	r30, r28
    2324:	e9 5b       	subi	r30, 0xB9	; 185
    2326:	ff 4f       	sbci	r31, 0xFF	; 255
    2328:	80 81       	ld	r24, Z
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	01 97       	sbiw	r24, 0x01	; 1
    232e:	f1 f7       	brne	.-4      	; 0x232c <appMain+0xfc6>
    2330:	fe 01       	movw	r30, r28
    2332:	e9 5b       	subi	r30, 0xB9	; 185
    2334:	ff 4f       	sbci	r31, 0xFF	; 255
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	80 83       	st	Z, r24
  _delay_ms(100);
  LED_turnOff(&pinA4Led);
    233a:	89 e8       	ldi	r24, 0x89	; 137
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    2342:	fe 01       	movw	r30, r28
    2344:	ed 5b       	subi	r30, 0xBD	; 189
    2346:	ff 4f       	sbci	r31, 0xFF	; 255
    2348:	80 e0       	ldi	r24, 0x00	; 0
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	a8 ec       	ldi	r26, 0xC8	; 200
    234e:	b2 e4       	ldi	r27, 0x42	; 66
    2350:	80 83       	st	Z, r24
    2352:	91 83       	std	Z+1, r25	; 0x01
    2354:	a2 83       	std	Z+2, r26	; 0x02
    2356:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2358:	8e 01       	movw	r16, r28
    235a:	01 5c       	subi	r16, 0xC1	; 193
    235c:	1f 4f       	sbci	r17, 0xFF	; 255
    235e:	fe 01       	movw	r30, r28
    2360:	ed 5b       	subi	r30, 0xBD	; 189
    2362:	ff 4f       	sbci	r31, 0xFF	; 255
    2364:	60 81       	ld	r22, Z
    2366:	71 81       	ldd	r23, Z+1	; 0x01
    2368:	82 81       	ldd	r24, Z+2	; 0x02
    236a:	93 81       	ldd	r25, Z+3	; 0x03
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	4a ef       	ldi	r20, 0xFA	; 250
    2372:	54 e4       	ldi	r21, 0x44	; 68
    2374:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2378:	dc 01       	movw	r26, r24
    237a:	cb 01       	movw	r24, r22
    237c:	f8 01       	movw	r30, r16
    237e:	80 83       	st	Z, r24
    2380:	91 83       	std	Z+1, r25	; 0x01
    2382:	a2 83       	std	Z+2, r26	; 0x02
    2384:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2386:	fe 01       	movw	r30, r28
    2388:	ff 96       	adiw	r30, 0x3f	; 63
    238a:	60 81       	ld	r22, Z
    238c:	71 81       	ldd	r23, Z+1	; 0x01
    238e:	82 81       	ldd	r24, Z+2	; 0x02
    2390:	93 81       	ldd	r25, Z+3	; 0x03
    2392:	20 e0       	ldi	r18, 0x00	; 0
    2394:	30 e0       	ldi	r19, 0x00	; 0
    2396:	40 e8       	ldi	r20, 0x80	; 128
    2398:	5f e3       	ldi	r21, 0x3F	; 63
    239a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    239e:	88 23       	and	r24, r24
    23a0:	2c f4       	brge	.+10     	; 0x23ac <appMain+0x1046>
		__ticks = 1;
    23a2:	81 e0       	ldi	r24, 0x01	; 1
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	9e af       	std	Y+62, r25	; 0x3e
    23a8:	8d af       	std	Y+61, r24	; 0x3d
    23aa:	46 c0       	rjmp	.+140    	; 0x2438 <appMain+0x10d2>
	else if (__tmp > 65535)
    23ac:	fe 01       	movw	r30, r28
    23ae:	ff 96       	adiw	r30, 0x3f	; 63
    23b0:	60 81       	ld	r22, Z
    23b2:	71 81       	ldd	r23, Z+1	; 0x01
    23b4:	82 81       	ldd	r24, Z+2	; 0x02
    23b6:	93 81       	ldd	r25, Z+3	; 0x03
    23b8:	20 e0       	ldi	r18, 0x00	; 0
    23ba:	3f ef       	ldi	r19, 0xFF	; 255
    23bc:	4f e7       	ldi	r20, 0x7F	; 127
    23be:	57 e4       	ldi	r21, 0x47	; 71
    23c0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    23c4:	18 16       	cp	r1, r24
    23c6:	64 f5       	brge	.+88     	; 0x2420 <appMain+0x10ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23c8:	fe 01       	movw	r30, r28
    23ca:	ed 5b       	subi	r30, 0xBD	; 189
    23cc:	ff 4f       	sbci	r31, 0xFF	; 255
    23ce:	60 81       	ld	r22, Z
    23d0:	71 81       	ldd	r23, Z+1	; 0x01
    23d2:	82 81       	ldd	r24, Z+2	; 0x02
    23d4:	93 81       	ldd	r25, Z+3	; 0x03
    23d6:	20 e0       	ldi	r18, 0x00	; 0
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	40 e2       	ldi	r20, 0x20	; 32
    23dc:	51 e4       	ldi	r21, 0x41	; 65
    23de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23e2:	dc 01       	movw	r26, r24
    23e4:	cb 01       	movw	r24, r22
    23e6:	bc 01       	movw	r22, r24
    23e8:	cd 01       	movw	r24, r26
    23ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23ee:	dc 01       	movw	r26, r24
    23f0:	cb 01       	movw	r24, r22
    23f2:	9e af       	std	Y+62, r25	; 0x3e
    23f4:	8d af       	std	Y+61, r24	; 0x3d
    23f6:	0f c0       	rjmp	.+30     	; 0x2416 <appMain+0x10b0>
    23f8:	88 ec       	ldi	r24, 0xC8	; 200
    23fa:	90 e0       	ldi	r25, 0x00	; 0
    23fc:	9c af       	std	Y+60, r25	; 0x3c
    23fe:	8b af       	std	Y+59, r24	; 0x3b
    2400:	8b ad       	ldd	r24, Y+59	; 0x3b
    2402:	9c ad       	ldd	r25, Y+60	; 0x3c
    2404:	01 97       	sbiw	r24, 0x01	; 1
    2406:	f1 f7       	brne	.-4      	; 0x2404 <appMain+0x109e>
    2408:	9c af       	std	Y+60, r25	; 0x3c
    240a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    240c:	8d ad       	ldd	r24, Y+61	; 0x3d
    240e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2410:	01 97       	sbiw	r24, 0x01	; 1
    2412:	9e af       	std	Y+62, r25	; 0x3e
    2414:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2416:	8d ad       	ldd	r24, Y+61	; 0x3d
    2418:	9e ad       	ldd	r25, Y+62	; 0x3e
    241a:	00 97       	sbiw	r24, 0x00	; 0
    241c:	69 f7       	brne	.-38     	; 0x23f8 <appMain+0x1092>
    241e:	16 c0       	rjmp	.+44     	; 0x244c <appMain+0x10e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2420:	fe 01       	movw	r30, r28
    2422:	ff 96       	adiw	r30, 0x3f	; 63
    2424:	60 81       	ld	r22, Z
    2426:	71 81       	ldd	r23, Z+1	; 0x01
    2428:	82 81       	ldd	r24, Z+2	; 0x02
    242a:	93 81       	ldd	r25, Z+3	; 0x03
    242c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2430:	dc 01       	movw	r26, r24
    2432:	cb 01       	movw	r24, r22
    2434:	9e af       	std	Y+62, r25	; 0x3e
    2436:	8d af       	std	Y+61, r24	; 0x3d
    2438:	8d ad       	ldd	r24, Y+61	; 0x3d
    243a:	9e ad       	ldd	r25, Y+62	; 0x3e
    243c:	9a af       	std	Y+58, r25	; 0x3a
    243e:	89 af       	std	Y+57, r24	; 0x39
    2440:	89 ad       	ldd	r24, Y+57	; 0x39
    2442:	9a ad       	ldd	r25, Y+58	; 0x3a
    2444:	01 97       	sbiw	r24, 0x01	; 1
    2446:	f1 f7       	brne	.-4      	; 0x2444 <appMain+0x10de>
    2448:	9a af       	std	Y+58, r25	; 0x3a
    244a:	89 af       	std	Y+57, r24	; 0x39
  _delay_ms(100);
  LED_turnOff(&pinA3Led);
    244c:	86 e8       	ldi	r24, 0x86	; 134
    244e:	90 e0       	ldi	r25, 0x00	; 0
    2450:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	a8 ec       	ldi	r26, 0xC8	; 200
    245a:	b2 e4       	ldi	r27, 0x42	; 66
    245c:	8d ab       	std	Y+53, r24	; 0x35
    245e:	9e ab       	std	Y+54, r25	; 0x36
    2460:	af ab       	std	Y+55, r26	; 0x37
    2462:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2464:	6d a9       	ldd	r22, Y+53	; 0x35
    2466:	7e a9       	ldd	r23, Y+54	; 0x36
    2468:	8f a9       	ldd	r24, Y+55	; 0x37
    246a:	98 ad       	ldd	r25, Y+56	; 0x38
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	4a ef       	ldi	r20, 0xFA	; 250
    2472:	54 e4       	ldi	r21, 0x44	; 68
    2474:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2478:	dc 01       	movw	r26, r24
    247a:	cb 01       	movw	r24, r22
    247c:	89 ab       	std	Y+49, r24	; 0x31
    247e:	9a ab       	std	Y+50, r25	; 0x32
    2480:	ab ab       	std	Y+51, r26	; 0x33
    2482:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2484:	69 a9       	ldd	r22, Y+49	; 0x31
    2486:	7a a9       	ldd	r23, Y+50	; 0x32
    2488:	8b a9       	ldd	r24, Y+51	; 0x33
    248a:	9c a9       	ldd	r25, Y+52	; 0x34
    248c:	20 e0       	ldi	r18, 0x00	; 0
    248e:	30 e0       	ldi	r19, 0x00	; 0
    2490:	40 e8       	ldi	r20, 0x80	; 128
    2492:	5f e3       	ldi	r21, 0x3F	; 63
    2494:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2498:	88 23       	and	r24, r24
    249a:	2c f4       	brge	.+10     	; 0x24a6 <appMain+0x1140>
		__ticks = 1;
    249c:	81 e0       	ldi	r24, 0x01	; 1
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	98 ab       	std	Y+48, r25	; 0x30
    24a2:	8f a7       	std	Y+47, r24	; 0x2f
    24a4:	3f c0       	rjmp	.+126    	; 0x2524 <appMain+0x11be>
	else if (__tmp > 65535)
    24a6:	69 a9       	ldd	r22, Y+49	; 0x31
    24a8:	7a a9       	ldd	r23, Y+50	; 0x32
    24aa:	8b a9       	ldd	r24, Y+51	; 0x33
    24ac:	9c a9       	ldd	r25, Y+52	; 0x34
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	3f ef       	ldi	r19, 0xFF	; 255
    24b2:	4f e7       	ldi	r20, 0x7F	; 127
    24b4:	57 e4       	ldi	r21, 0x47	; 71
    24b6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    24ba:	18 16       	cp	r1, r24
    24bc:	4c f5       	brge	.+82     	; 0x2510 <appMain+0x11aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24be:	6d a9       	ldd	r22, Y+53	; 0x35
    24c0:	7e a9       	ldd	r23, Y+54	; 0x36
    24c2:	8f a9       	ldd	r24, Y+55	; 0x37
    24c4:	98 ad       	ldd	r25, Y+56	; 0x38
    24c6:	20 e0       	ldi	r18, 0x00	; 0
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	40 e2       	ldi	r20, 0x20	; 32
    24cc:	51 e4       	ldi	r21, 0x41	; 65
    24ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24d2:	dc 01       	movw	r26, r24
    24d4:	cb 01       	movw	r24, r22
    24d6:	bc 01       	movw	r22, r24
    24d8:	cd 01       	movw	r24, r26
    24da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24de:	dc 01       	movw	r26, r24
    24e0:	cb 01       	movw	r24, r22
    24e2:	98 ab       	std	Y+48, r25	; 0x30
    24e4:	8f a7       	std	Y+47, r24	; 0x2f
    24e6:	0f c0       	rjmp	.+30     	; 0x2506 <appMain+0x11a0>
    24e8:	88 ec       	ldi	r24, 0xC8	; 200
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	9e a7       	std	Y+46, r25	; 0x2e
    24ee:	8d a7       	std	Y+45, r24	; 0x2d
    24f0:	8d a5       	ldd	r24, Y+45	; 0x2d
    24f2:	9e a5       	ldd	r25, Y+46	; 0x2e
    24f4:	01 97       	sbiw	r24, 0x01	; 1
    24f6:	f1 f7       	brne	.-4      	; 0x24f4 <appMain+0x118e>
    24f8:	9e a7       	std	Y+46, r25	; 0x2e
    24fa:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    24fe:	98 a9       	ldd	r25, Y+48	; 0x30
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	98 ab       	std	Y+48, r25	; 0x30
    2504:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2506:	8f a5       	ldd	r24, Y+47	; 0x2f
    2508:	98 a9       	ldd	r25, Y+48	; 0x30
    250a:	00 97       	sbiw	r24, 0x00	; 0
    250c:	69 f7       	brne	.-38     	; 0x24e8 <appMain+0x1182>
    250e:	14 c0       	rjmp	.+40     	; 0x2538 <appMain+0x11d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2510:	69 a9       	ldd	r22, Y+49	; 0x31
    2512:	7a a9       	ldd	r23, Y+50	; 0x32
    2514:	8b a9       	ldd	r24, Y+51	; 0x33
    2516:	9c a9       	ldd	r25, Y+52	; 0x34
    2518:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    251c:	dc 01       	movw	r26, r24
    251e:	cb 01       	movw	r24, r22
    2520:	98 ab       	std	Y+48, r25	; 0x30
    2522:	8f a7       	std	Y+47, r24	; 0x2f
    2524:	8f a5       	ldd	r24, Y+47	; 0x2f
    2526:	98 a9       	ldd	r25, Y+48	; 0x30
    2528:	9c a7       	std	Y+44, r25	; 0x2c
    252a:	8b a7       	std	Y+43, r24	; 0x2b
    252c:	8b a5       	ldd	r24, Y+43	; 0x2b
    252e:	9c a5       	ldd	r25, Y+44	; 0x2c
    2530:	01 97       	sbiw	r24, 0x01	; 1
    2532:	f1 f7       	brne	.-4      	; 0x2530 <appMain+0x11ca>
    2534:	9c a7       	std	Y+44, r25	; 0x2c
    2536:	8b a7       	std	Y+43, r24	; 0x2b
  _delay_ms(100);
  LED_turnOff(&pinA2Led);
    2538:	83 e8       	ldi	r24, 0x83	; 131
    253a:	90 e0       	ldi	r25, 0x00	; 0
    253c:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    2540:	80 e0       	ldi	r24, 0x00	; 0
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	a8 ec       	ldi	r26, 0xC8	; 200
    2546:	b2 e4       	ldi	r27, 0x42	; 66
    2548:	8f a3       	std	Y+39, r24	; 0x27
    254a:	98 a7       	std	Y+40, r25	; 0x28
    254c:	a9 a7       	std	Y+41, r26	; 0x29
    254e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2550:	6f a1       	ldd	r22, Y+39	; 0x27
    2552:	78 a5       	ldd	r23, Y+40	; 0x28
    2554:	89 a5       	ldd	r24, Y+41	; 0x29
    2556:	9a a5       	ldd	r25, Y+42	; 0x2a
    2558:	20 e0       	ldi	r18, 0x00	; 0
    255a:	30 e0       	ldi	r19, 0x00	; 0
    255c:	4a ef       	ldi	r20, 0xFA	; 250
    255e:	54 e4       	ldi	r21, 0x44	; 68
    2560:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2564:	dc 01       	movw	r26, r24
    2566:	cb 01       	movw	r24, r22
    2568:	8b a3       	std	Y+35, r24	; 0x23
    256a:	9c a3       	std	Y+36, r25	; 0x24
    256c:	ad a3       	std	Y+37, r26	; 0x25
    256e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2570:	6b a1       	ldd	r22, Y+35	; 0x23
    2572:	7c a1       	ldd	r23, Y+36	; 0x24
    2574:	8d a1       	ldd	r24, Y+37	; 0x25
    2576:	9e a1       	ldd	r25, Y+38	; 0x26
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	40 e8       	ldi	r20, 0x80	; 128
    257e:	5f e3       	ldi	r21, 0x3F	; 63
    2580:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2584:	88 23       	and	r24, r24
    2586:	2c f4       	brge	.+10     	; 0x2592 <appMain+0x122c>
		__ticks = 1;
    2588:	81 e0       	ldi	r24, 0x01	; 1
    258a:	90 e0       	ldi	r25, 0x00	; 0
    258c:	9a a3       	std	Y+34, r25	; 0x22
    258e:	89 a3       	std	Y+33, r24	; 0x21
    2590:	3f c0       	rjmp	.+126    	; 0x2610 <appMain+0x12aa>
	else if (__tmp > 65535)
    2592:	6b a1       	ldd	r22, Y+35	; 0x23
    2594:	7c a1       	ldd	r23, Y+36	; 0x24
    2596:	8d a1       	ldd	r24, Y+37	; 0x25
    2598:	9e a1       	ldd	r25, Y+38	; 0x26
    259a:	20 e0       	ldi	r18, 0x00	; 0
    259c:	3f ef       	ldi	r19, 0xFF	; 255
    259e:	4f e7       	ldi	r20, 0x7F	; 127
    25a0:	57 e4       	ldi	r21, 0x47	; 71
    25a2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    25a6:	18 16       	cp	r1, r24
    25a8:	4c f5       	brge	.+82     	; 0x25fc <appMain+0x1296>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25aa:	6f a1       	ldd	r22, Y+39	; 0x27
    25ac:	78 a5       	ldd	r23, Y+40	; 0x28
    25ae:	89 a5       	ldd	r24, Y+41	; 0x29
    25b0:	9a a5       	ldd	r25, Y+42	; 0x2a
    25b2:	20 e0       	ldi	r18, 0x00	; 0
    25b4:	30 e0       	ldi	r19, 0x00	; 0
    25b6:	40 e2       	ldi	r20, 0x20	; 32
    25b8:	51 e4       	ldi	r21, 0x41	; 65
    25ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25be:	dc 01       	movw	r26, r24
    25c0:	cb 01       	movw	r24, r22
    25c2:	bc 01       	movw	r22, r24
    25c4:	cd 01       	movw	r24, r26
    25c6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25ca:	dc 01       	movw	r26, r24
    25cc:	cb 01       	movw	r24, r22
    25ce:	9a a3       	std	Y+34, r25	; 0x22
    25d0:	89 a3       	std	Y+33, r24	; 0x21
    25d2:	0f c0       	rjmp	.+30     	; 0x25f2 <appMain+0x128c>
    25d4:	88 ec       	ldi	r24, 0xC8	; 200
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	98 a3       	std	Y+32, r25	; 0x20
    25da:	8f 8f       	std	Y+31, r24	; 0x1f
    25dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    25de:	98 a1       	ldd	r25, Y+32	; 0x20
    25e0:	01 97       	sbiw	r24, 0x01	; 1
    25e2:	f1 f7       	brne	.-4      	; 0x25e0 <appMain+0x127a>
    25e4:	98 a3       	std	Y+32, r25	; 0x20
    25e6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25e8:	89 a1       	ldd	r24, Y+33	; 0x21
    25ea:	9a a1       	ldd	r25, Y+34	; 0x22
    25ec:	01 97       	sbiw	r24, 0x01	; 1
    25ee:	9a a3       	std	Y+34, r25	; 0x22
    25f0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f2:	89 a1       	ldd	r24, Y+33	; 0x21
    25f4:	9a a1       	ldd	r25, Y+34	; 0x22
    25f6:	00 97       	sbiw	r24, 0x00	; 0
    25f8:	69 f7       	brne	.-38     	; 0x25d4 <appMain+0x126e>
    25fa:	14 c0       	rjmp	.+40     	; 0x2624 <appMain+0x12be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25fc:	6b a1       	ldd	r22, Y+35	; 0x23
    25fe:	7c a1       	ldd	r23, Y+36	; 0x24
    2600:	8d a1       	ldd	r24, Y+37	; 0x25
    2602:	9e a1       	ldd	r25, Y+38	; 0x26
    2604:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2608:	dc 01       	movw	r26, r24
    260a:	cb 01       	movw	r24, r22
    260c:	9a a3       	std	Y+34, r25	; 0x22
    260e:	89 a3       	std	Y+33, r24	; 0x21
    2610:	89 a1       	ldd	r24, Y+33	; 0x21
    2612:	9a a1       	ldd	r25, Y+34	; 0x22
    2614:	9e 8f       	std	Y+30, r25	; 0x1e
    2616:	8d 8f       	std	Y+29, r24	; 0x1d
    2618:	8d 8d       	ldd	r24, Y+29	; 0x1d
    261a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    261c:	01 97       	sbiw	r24, 0x01	; 1
    261e:	f1 f7       	brne	.-4      	; 0x261c <appMain+0x12b6>
    2620:	9e 8f       	std	Y+30, r25	; 0x1e
    2622:	8d 8f       	std	Y+29, r24	; 0x1d
  _delay_ms(100);
  LED_turnOff(&pinA1Led);
    2624:	80 e8       	ldi	r24, 0x80	; 128
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    262c:	80 e0       	ldi	r24, 0x00	; 0
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	a8 ec       	ldi	r26, 0xC8	; 200
    2632:	b2 e4       	ldi	r27, 0x42	; 66
    2634:	89 8f       	std	Y+25, r24	; 0x19
    2636:	9a 8f       	std	Y+26, r25	; 0x1a
    2638:	ab 8f       	std	Y+27, r26	; 0x1b
    263a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    263c:	69 8d       	ldd	r22, Y+25	; 0x19
    263e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2640:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2642:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2644:	20 e0       	ldi	r18, 0x00	; 0
    2646:	30 e0       	ldi	r19, 0x00	; 0
    2648:	4a ef       	ldi	r20, 0xFA	; 250
    264a:	54 e4       	ldi	r21, 0x44	; 68
    264c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2650:	dc 01       	movw	r26, r24
    2652:	cb 01       	movw	r24, r22
    2654:	8d 8b       	std	Y+21, r24	; 0x15
    2656:	9e 8b       	std	Y+22, r25	; 0x16
    2658:	af 8b       	std	Y+23, r26	; 0x17
    265a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    265c:	6d 89       	ldd	r22, Y+21	; 0x15
    265e:	7e 89       	ldd	r23, Y+22	; 0x16
    2660:	8f 89       	ldd	r24, Y+23	; 0x17
    2662:	98 8d       	ldd	r25, Y+24	; 0x18
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	40 e8       	ldi	r20, 0x80	; 128
    266a:	5f e3       	ldi	r21, 0x3F	; 63
    266c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2670:	88 23       	and	r24, r24
    2672:	2c f4       	brge	.+10     	; 0x267e <appMain+0x1318>
		__ticks = 1;
    2674:	81 e0       	ldi	r24, 0x01	; 1
    2676:	90 e0       	ldi	r25, 0x00	; 0
    2678:	9c 8b       	std	Y+20, r25	; 0x14
    267a:	8b 8b       	std	Y+19, r24	; 0x13
    267c:	3f c0       	rjmp	.+126    	; 0x26fc <appMain+0x1396>
	else if (__tmp > 65535)
    267e:	6d 89       	ldd	r22, Y+21	; 0x15
    2680:	7e 89       	ldd	r23, Y+22	; 0x16
    2682:	8f 89       	ldd	r24, Y+23	; 0x17
    2684:	98 8d       	ldd	r25, Y+24	; 0x18
    2686:	20 e0       	ldi	r18, 0x00	; 0
    2688:	3f ef       	ldi	r19, 0xFF	; 255
    268a:	4f e7       	ldi	r20, 0x7F	; 127
    268c:	57 e4       	ldi	r21, 0x47	; 71
    268e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2692:	18 16       	cp	r1, r24
    2694:	4c f5       	brge	.+82     	; 0x26e8 <appMain+0x1382>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2696:	69 8d       	ldd	r22, Y+25	; 0x19
    2698:	7a 8d       	ldd	r23, Y+26	; 0x1a
    269a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    269c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    269e:	20 e0       	ldi	r18, 0x00	; 0
    26a0:	30 e0       	ldi	r19, 0x00	; 0
    26a2:	40 e2       	ldi	r20, 0x20	; 32
    26a4:	51 e4       	ldi	r21, 0x41	; 65
    26a6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26aa:	dc 01       	movw	r26, r24
    26ac:	cb 01       	movw	r24, r22
    26ae:	bc 01       	movw	r22, r24
    26b0:	cd 01       	movw	r24, r26
    26b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26b6:	dc 01       	movw	r26, r24
    26b8:	cb 01       	movw	r24, r22
    26ba:	9c 8b       	std	Y+20, r25	; 0x14
    26bc:	8b 8b       	std	Y+19, r24	; 0x13
    26be:	0f c0       	rjmp	.+30     	; 0x26de <appMain+0x1378>
    26c0:	88 ec       	ldi	r24, 0xC8	; 200
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	9a 8b       	std	Y+18, r25	; 0x12
    26c6:	89 8b       	std	Y+17, r24	; 0x11
    26c8:	89 89       	ldd	r24, Y+17	; 0x11
    26ca:	9a 89       	ldd	r25, Y+18	; 0x12
    26cc:	01 97       	sbiw	r24, 0x01	; 1
    26ce:	f1 f7       	brne	.-4      	; 0x26cc <appMain+0x1366>
    26d0:	9a 8b       	std	Y+18, r25	; 0x12
    26d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26d4:	8b 89       	ldd	r24, Y+19	; 0x13
    26d6:	9c 89       	ldd	r25, Y+20	; 0x14
    26d8:	01 97       	sbiw	r24, 0x01	; 1
    26da:	9c 8b       	std	Y+20, r25	; 0x14
    26dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26de:	8b 89       	ldd	r24, Y+19	; 0x13
    26e0:	9c 89       	ldd	r25, Y+20	; 0x14
    26e2:	00 97       	sbiw	r24, 0x00	; 0
    26e4:	69 f7       	brne	.-38     	; 0x26c0 <appMain+0x135a>
    26e6:	14 c0       	rjmp	.+40     	; 0x2710 <appMain+0x13aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26e8:	6d 89       	ldd	r22, Y+21	; 0x15
    26ea:	7e 89       	ldd	r23, Y+22	; 0x16
    26ec:	8f 89       	ldd	r24, Y+23	; 0x17
    26ee:	98 8d       	ldd	r25, Y+24	; 0x18
    26f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26f4:	dc 01       	movw	r26, r24
    26f6:	cb 01       	movw	r24, r22
    26f8:	9c 8b       	std	Y+20, r25	; 0x14
    26fa:	8b 8b       	std	Y+19, r24	; 0x13
    26fc:	8b 89       	ldd	r24, Y+19	; 0x13
    26fe:	9c 89       	ldd	r25, Y+20	; 0x14
    2700:	98 8b       	std	Y+16, r25	; 0x10
    2702:	8f 87       	std	Y+15, r24	; 0x0f
    2704:	8f 85       	ldd	r24, Y+15	; 0x0f
    2706:	98 89       	ldd	r25, Y+16	; 0x10
    2708:	01 97       	sbiw	r24, 0x01	; 1
    270a:	f1 f7       	brne	.-4      	; 0x2708 <appMain+0x13a2>
    270c:	98 8b       	std	Y+16, r25	; 0x10
    270e:	8f 87       	std	Y+15, r24	; 0x0f
  _delay_ms(100);
  LED_turnOff(&pinA0Led);
    2710:	86 e9       	ldi	r24, 0x96	; 150
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	0e 94 15 09 	call	0x122a	; 0x122a <LED_turnOff>
    2718:	80 e0       	ldi	r24, 0x00	; 0
    271a:	90 e0       	ldi	r25, 0x00	; 0
    271c:	a8 ec       	ldi	r26, 0xC8	; 200
    271e:	b2 e4       	ldi	r27, 0x42	; 66
    2720:	8b 87       	std	Y+11, r24	; 0x0b
    2722:	9c 87       	std	Y+12, r25	; 0x0c
    2724:	ad 87       	std	Y+13, r26	; 0x0d
    2726:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2728:	6b 85       	ldd	r22, Y+11	; 0x0b
    272a:	7c 85       	ldd	r23, Y+12	; 0x0c
    272c:	8d 85       	ldd	r24, Y+13	; 0x0d
    272e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2730:	20 e0       	ldi	r18, 0x00	; 0
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	4a ef       	ldi	r20, 0xFA	; 250
    2736:	54 e4       	ldi	r21, 0x44	; 68
    2738:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    273c:	dc 01       	movw	r26, r24
    273e:	cb 01       	movw	r24, r22
    2740:	8f 83       	std	Y+7, r24	; 0x07
    2742:	98 87       	std	Y+8, r25	; 0x08
    2744:	a9 87       	std	Y+9, r26	; 0x09
    2746:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2748:	6f 81       	ldd	r22, Y+7	; 0x07
    274a:	78 85       	ldd	r23, Y+8	; 0x08
    274c:	89 85       	ldd	r24, Y+9	; 0x09
    274e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2750:	20 e0       	ldi	r18, 0x00	; 0
    2752:	30 e0       	ldi	r19, 0x00	; 0
    2754:	40 e8       	ldi	r20, 0x80	; 128
    2756:	5f e3       	ldi	r21, 0x3F	; 63
    2758:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    275c:	88 23       	and	r24, r24
    275e:	2c f4       	brge	.+10     	; 0x276a <appMain+0x1404>
		__ticks = 1;
    2760:	81 e0       	ldi	r24, 0x01	; 1
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	9e 83       	std	Y+6, r25	; 0x06
    2766:	8d 83       	std	Y+5, r24	; 0x05
    2768:	3f c0       	rjmp	.+126    	; 0x27e8 <appMain+0x1482>
	else if (__tmp > 65535)
    276a:	6f 81       	ldd	r22, Y+7	; 0x07
    276c:	78 85       	ldd	r23, Y+8	; 0x08
    276e:	89 85       	ldd	r24, Y+9	; 0x09
    2770:	9a 85       	ldd	r25, Y+10	; 0x0a
    2772:	20 e0       	ldi	r18, 0x00	; 0
    2774:	3f ef       	ldi	r19, 0xFF	; 255
    2776:	4f e7       	ldi	r20, 0x7F	; 127
    2778:	57 e4       	ldi	r21, 0x47	; 71
    277a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    277e:	18 16       	cp	r1, r24
    2780:	4c f5       	brge	.+82     	; 0x27d4 <appMain+0x146e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2782:	6b 85       	ldd	r22, Y+11	; 0x0b
    2784:	7c 85       	ldd	r23, Y+12	; 0x0c
    2786:	8d 85       	ldd	r24, Y+13	; 0x0d
    2788:	9e 85       	ldd	r25, Y+14	; 0x0e
    278a:	20 e0       	ldi	r18, 0x00	; 0
    278c:	30 e0       	ldi	r19, 0x00	; 0
    278e:	40 e2       	ldi	r20, 0x20	; 32
    2790:	51 e4       	ldi	r21, 0x41	; 65
    2792:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2796:	dc 01       	movw	r26, r24
    2798:	cb 01       	movw	r24, r22
    279a:	bc 01       	movw	r22, r24
    279c:	cd 01       	movw	r24, r26
    279e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	9e 83       	std	Y+6, r25	; 0x06
    27a8:	8d 83       	std	Y+5, r24	; 0x05
    27aa:	0f c0       	rjmp	.+30     	; 0x27ca <appMain+0x1464>
    27ac:	88 ec       	ldi	r24, 0xC8	; 200
    27ae:	90 e0       	ldi	r25, 0x00	; 0
    27b0:	9c 83       	std	Y+4, r25	; 0x04
    27b2:	8b 83       	std	Y+3, r24	; 0x03
    27b4:	8b 81       	ldd	r24, Y+3	; 0x03
    27b6:	9c 81       	ldd	r25, Y+4	; 0x04
    27b8:	01 97       	sbiw	r24, 0x01	; 1
    27ba:	f1 f7       	brne	.-4      	; 0x27b8 <appMain+0x1452>
    27bc:	9c 83       	std	Y+4, r25	; 0x04
    27be:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27c0:	8d 81       	ldd	r24, Y+5	; 0x05
    27c2:	9e 81       	ldd	r25, Y+6	; 0x06
    27c4:	01 97       	sbiw	r24, 0x01	; 1
    27c6:	9e 83       	std	Y+6, r25	; 0x06
    27c8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27ca:	8d 81       	ldd	r24, Y+5	; 0x05
    27cc:	9e 81       	ldd	r25, Y+6	; 0x06
    27ce:	00 97       	sbiw	r24, 0x00	; 0
    27d0:	69 f7       	brne	.-38     	; 0x27ac <appMain+0x1446>
    27d2:	14 c0       	rjmp	.+40     	; 0x27fc <appMain+0x1496>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27d4:	6f 81       	ldd	r22, Y+7	; 0x07
    27d6:	78 85       	ldd	r23, Y+8	; 0x08
    27d8:	89 85       	ldd	r24, Y+9	; 0x09
    27da:	9a 85       	ldd	r25, Y+10	; 0x0a
    27dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27e0:	dc 01       	movw	r26, r24
    27e2:	cb 01       	movw	r24, r22
    27e4:	9e 83       	std	Y+6, r25	; 0x06
    27e6:	8d 83       	std	Y+5, r24	; 0x05
    27e8:	8d 81       	ldd	r24, Y+5	; 0x05
    27ea:	9e 81       	ldd	r25, Y+6	; 0x06
    27ec:	9a 83       	std	Y+2, r25	; 0x02
    27ee:	89 83       	std	Y+1, r24	; 0x01
    27f0:	89 81       	ldd	r24, Y+1	; 0x01
    27f2:	9a 81       	ldd	r25, Y+2	; 0x02
    27f4:	01 97       	sbiw	r24, 0x01	; 1
    27f6:	f1 f7       	brne	.-4      	; 0x27f4 <appMain+0x148e>
    27f8:	9a 83       	std	Y+2, r25	; 0x02
    27fa:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(100);
}
    27fc:	c0 52       	subi	r28, 0x20	; 32
    27fe:	df 4f       	sbci	r29, 0xFF	; 255
    2800:	0f b6       	in	r0, 0x3f	; 63
    2802:	f8 94       	cli
    2804:	de bf       	out	0x3e, r29	; 62
    2806:	0f be       	out	0x3f, r0	; 63
    2808:	cd bf       	out	0x3d, r28	; 61
    280a:	cf 91       	pop	r28
    280c:	df 91       	pop	r29
    280e:	1f 91       	pop	r17
    2810:	0f 91       	pop	r16
    2812:	08 95       	ret

00002814 <main>:
// GitHub         : https://github.com/sherifkhadr
/*************************************************************************/

#include "APPLICATION/app.h"

int main(void) {
    2814:	df 93       	push	r29
    2816:	cf 93       	push	r28
    2818:	cd b7       	in	r28, 0x3d	; 61
    281a:	de b7       	in	r29, 0x3e	; 62

  appInit();
    281c:	0e 94 8c 09 	call	0x1318	; 0x1318 <appInit>

  while (1) {
    appMain();
    2820:	0e 94 b3 09 	call	0x1366	; 0x1366 <appMain>
    2824:	fd cf       	rjmp	.-6      	; 0x2820 <main+0xc>

00002826 <__prologue_saves__>:
    2826:	2f 92       	push	r2
    2828:	3f 92       	push	r3
    282a:	4f 92       	push	r4
    282c:	5f 92       	push	r5
    282e:	6f 92       	push	r6
    2830:	7f 92       	push	r7
    2832:	8f 92       	push	r8
    2834:	9f 92       	push	r9
    2836:	af 92       	push	r10
    2838:	bf 92       	push	r11
    283a:	cf 92       	push	r12
    283c:	df 92       	push	r13
    283e:	ef 92       	push	r14
    2840:	ff 92       	push	r15
    2842:	0f 93       	push	r16
    2844:	1f 93       	push	r17
    2846:	cf 93       	push	r28
    2848:	df 93       	push	r29
    284a:	cd b7       	in	r28, 0x3d	; 61
    284c:	de b7       	in	r29, 0x3e	; 62
    284e:	ca 1b       	sub	r28, r26
    2850:	db 0b       	sbc	r29, r27
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	09 94       	ijmp

0000285e <__epilogue_restores__>:
    285e:	2a 88       	ldd	r2, Y+18	; 0x12
    2860:	39 88       	ldd	r3, Y+17	; 0x11
    2862:	48 88       	ldd	r4, Y+16	; 0x10
    2864:	5f 84       	ldd	r5, Y+15	; 0x0f
    2866:	6e 84       	ldd	r6, Y+14	; 0x0e
    2868:	7d 84       	ldd	r7, Y+13	; 0x0d
    286a:	8c 84       	ldd	r8, Y+12	; 0x0c
    286c:	9b 84       	ldd	r9, Y+11	; 0x0b
    286e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2870:	b9 84       	ldd	r11, Y+9	; 0x09
    2872:	c8 84       	ldd	r12, Y+8	; 0x08
    2874:	df 80       	ldd	r13, Y+7	; 0x07
    2876:	ee 80       	ldd	r14, Y+6	; 0x06
    2878:	fd 80       	ldd	r15, Y+5	; 0x05
    287a:	0c 81       	ldd	r16, Y+4	; 0x04
    287c:	1b 81       	ldd	r17, Y+3	; 0x03
    287e:	aa 81       	ldd	r26, Y+2	; 0x02
    2880:	b9 81       	ldd	r27, Y+1	; 0x01
    2882:	ce 0f       	add	r28, r30
    2884:	d1 1d       	adc	r29, r1
    2886:	0f b6       	in	r0, 0x3f	; 63
    2888:	f8 94       	cli
    288a:	de bf       	out	0x3e, r29	; 62
    288c:	0f be       	out	0x3f, r0	; 63
    288e:	cd bf       	out	0x3d, r28	; 61
    2890:	ed 01       	movw	r28, r26
    2892:	08 95       	ret

00002894 <_exit>:
    2894:	f8 94       	cli

00002896 <__stop_program>:
    2896:	ff cf       	rjmp	.-2      	; 0x2896 <__stop_program>
